{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/views/assignment/AssignmentTreatmentSelect.vue?a0e2","webpack:///src/views/assignment/AssignmentTreatmentSelect.vue","webpack:///./src/views/assignment/AssignmentTreatmentSelect.vue?fd0e","webpack:///./src/views/assignment/AssignmentTreatmentSelect.vue","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","_vm","_h","$createElement","_c","_self","_v","_s","assignment","title","attrs","treatments","conditions","_l","condition","key","conditionId","hasTreatment","on","$event","goToBuilder","_e","staticRenderFns","assignment_id","parseInt","$route","params","exposure_id","data","tCount","conditionTreatments","find","conditionTreatment","treatment","saveExit","$router","push","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VIcon","VList","VListItem","VListItemAction","VListItemContent","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"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","file":"js/chunk-74f96c60.1f41590b.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.assignment)?_c('div',[_c('h1',{staticClass:\"pa-0 mb-7\"},[_vm._v(\"Now, let’s upload your treatments for each condition for \"),_c('strong',[_vm._v(_vm._s(_vm.assignment.title))])]),(_vm.conditions)?[_c('v-expansion-panels',{staticClass:\"v-expansion-panels--outlined mb-7\",attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3\"},[_c('v-expansion-panel-header',[_vm._v(_vm._s(_vm.assignment.title)+\" (\"+_vm._s(_vm.assignment.treatments && _vm.assignment.treatments.length || 0)+\"/\"+_vm._s(_vm.conditions.length)+\") \")]),_c('v-expansion-panel-content',[_c('v-list',{staticClass:\"pa-0\"},_vm._l((_vm.conditions),function(condition){return _c('v-list-item',{key:condition.conditionId,staticClass:\"justify-center px-0\"},[_c('v-list-item-content',[_c('p',{staticClass:\"ma-0 pa-0\"},[_vm._v(_vm._s(condition.name))])]),_c('v-list-item-action',[(_vm.hasTreatment(condition))?[_c('v-btn',{attrs:{\"icon\":\"\",\"outlined\":\"\",\"text\":\"\",\"tile\":\"\"},on:{\"click\":function($event){return _vm.goToBuilder(condition.conditionId)}}},[_c('v-icon',[_vm._v(\"mdi-pencil\")])],1)]:[_c('v-btn',{attrs:{\"color\":\"primary\",\"outlined\":\"\"},on:{\"click\":function($event){return _vm.goToBuilder(condition.conditionId)}}},[_vm._v(\"Select \")])]],2)],1)}),1)],1)],1)],1)]:[_c('p',[_vm._v(\"no conditions\")])]],2):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div v-if=\"assignment\">\n    <h1 class=\"pa-0 mb-7\">Now, let’s upload your treatments for each condition for <strong>{{\n        assignment.title\n      }}</strong></h1>\n\n    <template v-if=\"conditions\">\n      <v-expansion-panels class=\"v-expansion-panels--outlined mb-7\" flat>\n        <v-expansion-panel class=\"py-3\">\n          <v-expansion-panel-header>{{ assignment.title }} ({{ assignment.treatments && assignment.treatments.length || 0 }}/{{ conditions.length }})\n          </v-expansion-panel-header>\n          <v-expansion-panel-content>\n            <v-list class=\"pa-0\">\n\n              <v-list-item class=\"justify-center px-0\"\n                           v-for=\"condition in conditions\"\n                           :key=\"condition.conditionId\">\n                <v-list-item-content>\n                  <p class=\"ma-0 pa-0\">{{ condition.name }}</p>\n                </v-list-item-content>\n\n                <v-list-item-action>\n                  <template v-if=\"hasTreatment(condition)\">\n                    <v-btn\n                      icon\n                      outlined\n                      text\n                      tile\n                      @click=\"goToBuilder(condition.conditionId)\"\n                    >\n                      <v-icon>mdi-pencil</v-icon>\n                    </v-btn>\n                  </template>\n                  <template v-else>\n                    <v-btn\n                      color=\"primary\"\n                      outlined\n                      @click=\"goToBuilder(condition.conditionId)\"\n                    >Select\n                    </v-btn>\n                  </template>\n                </v-list-item-action>\n              </v-list-item>\n\n            </v-list>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </template>\n    <template v-else>\n      <p>no conditions</p>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {mapActions, mapGetters} from 'vuex';\n\nexport default {\n  name: 'AssignmentTreatmentSelect',\n  props: ['experiment'],\n  computed: {\n    ...mapGetters({\n      assignment: 'assignment/assignment',\n      conditions: 'experiment/conditions',\n    }),\n    assignment_id() {\n      return parseInt(this.$route.params.assignment_id)\n    },\n    exposure_id() {\n      return parseInt(this.$route.params.exposure_id)\n    },\n  },\n  data() {\n    return {\n      tCount: 0,\n      conditionTreatments: []\n    }\n  },\n  methods: {\n    ...mapActions({\n      createTreatment: 'treatment/createTreatment',\n      createAssessment: 'assessment/createAssessment',\n      fetchAssignment: 'assignment/fetchAssignment',\n      checkTreatment: 'treatment/checkTreatment',\n    }),\n    async handleCreateTreatment(conditionId) {\n      // POST TREATMENT\n      try {\n        return await this.createTreatment([\n          this.experiment.experimentId,\n          conditionId,\n          this.assignment_id,\n        ])\n      } catch (error) {\n        console.error(\"handleCreateTreatment | catch\", {error})\n      }\n    },\n    async handleCreateAssessment(conditionId, treatment) {\n      // POST ASSESSMENT TITLE & HTML (description)\n      try {\n        return await this.createAssessment([\n          this.experiment.experimentId,\n          conditionId,\n          treatment.treatmentId\n        ])\n      } catch (error) {\n        console.error(\"handleCreateAssessment | catch\", {error})\n      }\n    },\n    async goToBuilder(conditionId) {\n      // create the treatment\n      const treatment = await this.handleCreateTreatment(conditionId)\n      // create the assessment\n      const assessment = await this.handleCreateAssessment(conditionId, treatment?.data)\n\n      // show an alert if there's a problem creating the treatment or assessment\n      if (treatment?.data?.error || assessment?.data?.error) {\n        this.$swal('There was a problem creating your assessment')\n        return false\n      }\n\n      // // send user to builder with the treatment and assessment ids\n      this.$router.push({\n        name: 'TerracottaBuilder',\n        params: {\n          experiment_id: this.experiment.experimentId,\n          condition_id: conditionId,\n          treatment_id: treatment?.data?.treatmentId,\n          assessment_id: assessment?.data?.assessmentId\n        },\n      });\n    },\n    hasTreatment(condition) {\n      // if condition has treatment, return boolean for template\n      return !!this.conditionTreatments.find(conditionTreatment => {\n        return conditionTreatment.treatment &&\n          conditionTreatment.condition.conditionId === condition.conditionId &&\n          conditionTreatment.treatment.assignmentId === this.assignment_id\n      })\n    },\n    async checkConditionTreatments() {\n      // loop conditions and build condition/treatment manifest\n      // (templates don't like async methods for conditions)\n      for (let c of this.conditions) {\n        const t = await this.checkTreatment([this.experiment.experimentId, c.conditionId, this.assignment_id])\n\n        if (t?.data?.find(o=>parseInt(o.assignmentId)===this.assignment_id)) {\n          const ctObj = {\n            treatment: t.data ? t.data.find(o=>parseInt(o.assignmentId)===this.assignment_id) : null,\n            condition: c\n          }\n\n          this.conditionTreatments = [\n            ...this.conditionTreatments.filter((o) =>\n              o.conditionId === ctObj.conditionId &&\n              o.treatment.assignmentId === this.assignment_id\n            ),\n            {...ctObj}\n          ];\n        }\n      }\n    },\n    saveExit() {\n      this.$router.push({name: 'Home'})\n    }\n  },\n  async created() {\n    await this.fetchAssignment([this.experiment.experimentId, this.exposure_id, this.assignment_id])\n    await this.checkConditionTreatments()\n  },\n};\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AssignmentTreatmentSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AssignmentTreatmentSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AssignmentTreatmentSelect.vue?vue&type=template&id=b5903358&\"\nimport script from \"./AssignmentTreatmentSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./AssignmentTreatmentSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAction } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon,VList,VListItem,VListItemAction,VListItemContent})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}