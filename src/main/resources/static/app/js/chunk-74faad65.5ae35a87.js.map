{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/views/assignment/YourAssignments.vue?567e","webpack:///src/views/assignment/YourAssignments.vue","webpack:///./src/views/assignment/YourAssignments.vue?f929","webpack:///./src/views/assignment/YourAssignments.vue","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","_vm","_h","$createElement","_c","_self","loaded","exposures","assignments","_v","_l","exposure","eIndex","key","attrs","_s","title","assignmentIsBalanced","exposureId","filter","a","assignment","aIndex","params","assignmentId","on","$event","handleDeleteAssignment","_e","parseInt","shortestLength","longestLength","staticRenderFns","exposure_id","$route","experiment_id","experiment","experimentId","data","eArr","forEach","shortest","l","longest","longestArr","e","push","curArrLength","saveExit","$router","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VIcon","VList","VListItem","VListItemAction","VListItemContent","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","toggle","isBooted","String"],"mappings":"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","file":"js/chunk-74faad65.5ae35a87.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.loaded && _vm.exposures && _vm.exposures.length>0 && _vm.assignments)?[_c('h1',{staticClass:\"mb-3\"},[_vm._v(\"Your Assignments\")]),_c('div',{staticClass:\"mb-6\"},[_vm._l((_vm.exposures),function(exposure,eIndex){return _c('v-expansion-panels',{key:eIndex,staticClass:\"v-expansion-panels--outlined mb-7\",attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\" \"+_vm._s(exposure.title)+\" \"),_c('span',{class:{'red--text':!_vm.assignmentIsBalanced(exposure.exposureId)}},[_vm._v(\"(\"+_vm._s(_vm.assignments.filter(function (a) { return a.exposureId === exposure.exposureId; }).length)+\")\")])])]),_c('v-expansion-panel-content',[_c('v-list',{staticClass:\"pa-0  mb-3\"},_vm._l((_vm.assignments.filter(function (a){ return a.exposureId===exposure.exposureId; })),function(assignment,aIndex){return _c('v-list-item',{key:aIndex,staticClass:\"justify-center px-0\"},[_c('v-list-item-content',[_c('p',{staticClass:\"ma-0 pa-0\"},[_vm._v(_vm._s(assignment.title))])]),_c('v-list-item-action',[_c('v-btn',{attrs:{\"icon\":\"\",\"outlined\":\"\",\"text\":\"\",\"tile\":\"\",\"to\":{name:'AssignmentTreatmentSelect', params: {'exposure_id':assignment.exposureId, 'assignment_id':assignment.assignmentId}}}},[_c('v-icon',[_vm._v(\"mdi-pencil\")])],1)],1),_c('v-list-item-action',[_c('v-btn',{attrs:{\"icon\":\"\",\"outlined\":\"\",\"text\":\"\",\"tile\":\"\"},on:{\"click\":function($event){return _vm.handleDeleteAssignment(exposure.exposureId, assignment)}}},[_c('v-icon',[_vm._v(\"mdi-delete\")])],1)],1)],1)}),1),(!_vm.assignmentIsBalanced(exposure.exposureId))?[_c('div',{staticClass:\"red--text mb-3\"},[_vm._v(\"Add an assignment to balance the experiment\")])]:_vm._e(),_c('v-btn',{staticClass:\"px-0\",attrs:{\"elevation\":\"0\",\"plain\":\"\",\"color\":\"primary\",\"to\":{ name: 'AssignmentCreateAssignment', params:{'exposure_id': parseInt(exposure.exposureId)} }}},[_vm._v(\"add assignment\")])],2)],1)],1)}),_c('v-btn',{attrs:{\"elevation\":\"0\",\"color\":\"primary\",\"to\":{ name: 'ExperimentSummary' },\"disabled\":_vm.shortestLength !== _vm.longestLength || _vm.longestLength < 1}},[_vm._v(\"Finish\")])],2)]:_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <template v-if=\"loaded && exposures && exposures.length>0 && assignments\">\r\n      <h1 class=\"mb-3\">Your Assignments</h1>\r\n      <div class=\"mb-6\">\r\n        <v-expansion-panels class=\"v-expansion-panels--outlined mb-7\"\r\n                            flat\r\n                            v-for=\"(exposure, eIndex) in exposures\"\r\n                            :key=\"eIndex\">\r\n          <v-expansion-panel class=\"py-3\">\r\n            <v-expansion-panel-header>\r\n              <strong>\r\n                {{ exposure.title }}\r\n                <span\r\n                  :class=\"{'red--text':!assignmentIsBalanced(exposure.exposureId)}\">({{ assignments.filter(a => a.exposureId === exposure.exposureId).length }})</span>\r\n              </strong>\r\n            </v-expansion-panel-header>\r\n            <v-expansion-panel-content>\r\n              <v-list class=\"pa-0  mb-3\">\r\n                <v-list-item class=\"justify-center px-0\"\r\n                             v-for=\"(assignment, aIndex) in assignments.filter(a=>a.exposureId===exposure.exposureId)\"\r\n                             :key=\"aIndex\">\r\n                  <v-list-item-content>\r\n                    <p class=\"ma-0 pa-0\">{{ assignment.title }}</p>\r\n                  </v-list-item-content>\r\n                  <v-list-item-action>\r\n                    <v-btn\r\n                      icon\r\n                      outlined\r\n                      text\r\n                      tile\r\n                      :to=\"{name:'AssignmentTreatmentSelect', params: {'exposure_id':assignment.exposureId, 'assignment_id':assignment.assignmentId}}\">\r\n                      <v-icon>mdi-pencil</v-icon>\r\n                    </v-btn>\r\n                  </v-list-item-action>\r\n                  <v-list-item-action>\r\n                    <v-btn\r\n                      icon\r\n                      outlined\r\n                      text\r\n                      tile\r\n                      @click=\"handleDeleteAssignment(exposure.exposureId, assignment)\">\r\n                      <v-icon>mdi-delete</v-icon>\r\n                    </v-btn>\r\n                  </v-list-item-action>\r\n                </v-list-item>\r\n              </v-list>\r\n              <template v-if=\"!assignmentIsBalanced(exposure.exposureId)\">\r\n                <div class=\"red--text mb-3\">Add an assignment to balance the experiment</div>\r\n              </template>\r\n              <v-btn\r\n                elevation=\"0\"\r\n                plain\r\n                color=\"primary\"\r\n                class=\"px-0\"\r\n                :to=\"{ name: 'AssignmentCreateAssignment', params:{'exposure_id': parseInt(exposure.exposureId)} }\"\r\n              >add assignment</v-btn>\r\n            </v-expansion-panel-content>\r\n          </v-expansion-panel>\r\n        </v-expansion-panels>\r\n        <v-btn\r\n          elevation=\"0\"\r\n          color=\"primary\"\r\n          :to=\"{ name: 'ExperimentSummary' }\"\r\n          :disabled=\"shortestLength !== longestLength || longestLength < 1\"\r\n        >Finish</v-btn>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters, mapMutations} from 'vuex'\r\n\r\nexport default {\r\n  name: 'YourAssignments',\r\n  props: ['experiment'],\r\n  computed: {\r\n    exposure_id() {\r\n      return parseInt(this.$route.params.exposure_id)\r\n    },\r\n    experiment_id() {\r\n      return parseInt(this.experiment.experimentId)\r\n    },\r\n    ...mapGetters({\r\n      assignments: 'assignment/assignments',\r\n      exposures: 'exposures/exposures'\r\n    })\r\n  },\r\n  data: () => ({\r\n    shortestLength: 0,\r\n    longestLength: 0,\r\n    loaded: false\r\n  }),\r\n  methods: {\r\n    ...mapMutations({\r\n      resetAssignments: 'assignment/resetAssignments',\r\n    }),\r\n    ...mapActions({\r\n      fetchExposures: 'exposures/fetchExposures',\r\n      fetchAssignmentsByExposure: 'assignment/fetchAssignmentsByExposure',\r\n      deleteAssignment: 'assignment/deleteAssignment',\r\n    }),\r\n    assignmentIsBalanced(eid) {\r\n      // if Exposure Set Assignment array length is less than other Exposure Set Assignment arrays\r\n      let eArr = []\r\n      let longestArr = []\r\n      let shortest = 0\r\n      let longest = 0\r\n\r\n      for (const e of this.exposures) {\r\n        eArr = [...eArr, {\r\n          exposureId: e.exposureId,\r\n          assignments: this.assignments.filter(a => a.exposureId === e.exposureId)\r\n        }]\r\n      }\r\n\r\n      const curArrLength = eArr.find(e => e.exposureId === eid)?.assignments?.length\r\n\r\n      eArr.forEach((e) => {\r\n        const l = e.assignments.length\r\n\r\n        shortest = (l <= longest)? l : shortest\r\n\r\n        if (l > longest) {\r\n          longestArr = [e]\r\n          longest = l\r\n        } else if (l == longest) {\r\n          longestArr.push(e)\r\n        }\r\n      });\r\n      // update the component so we can use these values in the template\r\n      this.shortestLength = shortest\r\n      this.longestLength = longest\r\n      // return true if current exposure set assignments list is longer or equal\r\n      // to the longest assignment list in the exposure sets\r\n      return !!curArrLength && curArrLength >= longest && curArrLength > 0\r\n    },\r\n    async handleDeleteAssignment(eid, a) {\r\n      // DELETE ASSIGNMENT\r\n      const reallyDelete = confirm(`Are you sure you want to delete the assignment \"${a.title}\"?`)\r\n      if (reallyDelete) {\r\n        try {\r\n          return await this.deleteAssignment([\r\n            this.experiment_id,\r\n            eid,\r\n            a.assignmentId\r\n          ])\r\n        } catch (error) {\r\n          console.error(\"handleDeleteQuestion | catch\", {error})\r\n        }\r\n      }\r\n\r\n    },\r\n    saveExit() {\r\n      this.$router.push({name: 'Home'})\r\n    }\r\n  },\r\n  async created() {\r\n    // reset assignments to get a clean list\r\n    await this.resetAssignments()\r\n    // update assignments on load\r\n    await this.fetchExposures(this.experiment_id)\r\n    for (const e of this.exposures) {\r\n      await this.fetchAssignmentsByExposure([this.experiment_id, e.exposureId])\r\n    }\r\n\r\n    // forward to create assignment if assignments array for selected exposure is empty\r\n    if (\r\n      this.exposure_id &&\r\n      this.exposures.find(e => parseInt(e.exposureId) === this.exposure_id) &&\r\n      !this.assignments.find(a => parseInt(a.exposureId) === this.exposure_id)\r\n    ) {\r\n      this.$router.push({name: 'AssignmentCreateAssignment', params:{exposure_id: this.exposure_id}})\r\n    } else {\r\n      // we don't want to display empty fields\r\n      this.loaded = true\r\n    }\r\n  },\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YourAssignments.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YourAssignments.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./YourAssignments.vue?vue&type=template&id=e31862ba&\"\nimport script from \"./YourAssignments.vue?vue&type=script&lang=js&\"\nexport * from \"./YourAssignments.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAction } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon,VList,VListItem,VListItemAction,VListItemContent})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}