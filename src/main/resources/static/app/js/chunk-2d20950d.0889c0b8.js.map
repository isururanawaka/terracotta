{"version":3,"sources":["webpack:///./src/views/participation/distribution/ParticipationManualDistribution.vue?1eb4","webpack:///src/views/participation/distribution/ParticipationManualDistribution.vue","webpack:///./src/views/participation/distribution/ParticipationManualDistribution.vue?427b","webpack:///./src/views/participation/distribution/ParticipationManualDistribution.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","_l","condition","index","key","conditionId","_s","name","arrayDataProxy","length","getConditionNames","moveToHandler","on","submitDistribution","staticRenderFns","props","components","ListParticipants","data","watch","participants","deep","immediate","handler","newArray","push","newValue","arrayData","computed","conditions","experiment","get","set","methods","getExposure","fetchExposures","experimentId","firstExposure","groupConditionList","map","undefined","conditionGroupIDMap","participantId","participant","consent","dropped","groupId","requestBody","temp","filteredParticipants","idx","beforeRouteEnter","beforeRouteUpdate","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels"],"mappings":"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","file":"js/chunk-2d20950d.0889c0b8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',{staticClass:\"mb-5\"},[_vm._v(\" Select which students you would like for each condition. \")]),_c('p',[_vm._v(\"Conditions\")]),_c('v-expansion-panels',{staticClass:\"v-expansion-panels--icon\",attrs:{\"flat\":\"\"}},_vm._l((this.conditions),function(condition,index){return _c('v-expansion-panel',{key:condition.conditionId},[_c('v-expansion-panel-header',[_vm._v(\" \"+_vm._s(condition.name)+\" (\"+_vm._s(_vm.arrayDataProxy[index].length)+\") \")]),_c('v-expansion-panel-content',[_c('ListParticipants',{attrs:{\"listOfParticipants\":_vm.arrayDataProxy[index],\"moveToOptions\":_vm.getConditionNames,\"moveToHandler\":_vm.moveToHandler,\"selectedOption\":'' + index}})],1)],1)}),1),_c('ListParticipants',{attrs:{\"listOfParticipants\":_vm.arrayDataProxy[this.getConditionNames.length - 1],\"moveToOptions\":_vm.getConditionNames,\"moveToHandler\":_vm.moveToHandler,\"selectedOption\":'' + (this.getConditionNames.length - 1)}}),_c('v-btn',{staticClass:\"mt-10\",attrs:{\"elevation\":\"0\",\"color\":\"primary\"},on:{\"click\":_vm.submitDistribution}},[_vm._v(\"Continue\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <h1 class=\"mb-5\">\n      Select which students you would like for each condition.\n    </h1>\n\n    <!-- Conditions Section -->\n    <p>Conditions</p>\n    <v-expansion-panels class=\"v-expansion-panels--icon\" flat>\n      <v-expansion-panel\n        v-for=\"(condition, index) in this.conditions\"\n        :key=\"condition.conditionId\"\n      >\n        <v-expansion-panel-header>\n          {{ condition.name }} ({{ arrayDataProxy[index].length }})\n        </v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <ListParticipants\n            :listOfParticipants=\"arrayDataProxy[index]\"\n            :moveToOptions=\"getConditionNames\"\n            :moveToHandler=\"moveToHandler\"\n            :selectedOption=\"'' + index\"\n          />\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <!-- Unassigned -->\n    <ListParticipants\n      :listOfParticipants=\"arrayDataProxy[this.getConditionNames.length - 1]\"\n      :moveToOptions=\"getConditionNames\"\n      :moveToHandler=\"moveToHandler\"\n      :selectedOption=\"'' + (this.getConditionNames.length - 1)\"\n    />\n\n    <v-btn\n      elevation=\"0\"\n      class=\"mt-10\"\n      color=\"primary\"\n      @click=\"submitDistribution\"\n      >Continue</v-btn\n    >\n  </div>\n</template>\n\n<script>\nimport ListParticipants from '../../../components/ListParticipants.vue'\nimport store from '@/store'\nimport { mapGetters, mapActions } from 'vuex'\nimport { participantService } from '@/services'\n\nexport default {\n  name: 'ParticipationManualDistribution',\n  props: ['experiment'],\n  components: {\n    ListParticipants,\n  },\n  data() {\n    return {\n      arrayDataProxy: [],\n    };\n  },\n  watch: {\n    participants: {\n      // Watcher is required for keeping track of changes\n      // made in Participants\n      deep: true,\n      immediate: true,\n      handler(newValue) {\n        // This will only required when the page is loaded\n        const newArray = []\n        for (let i = 0; i < this.conditions.length; i++) {\n          newArray.push([])\n        }\n        // All the participant will go to 'Unparticipate' section\n        newArray.push(newValue)\n        this.arrayData = newArray\n      },\n    },\n  },\n  computed: {\n    ...mapGetters({\n      participants: 'participants/participants',\n      exposures: 'exposures/exposures',\n    }),\n\n    conditions() {\n      return this.experiment.conditions\n    },\n\n    getConditionNames() {\n      return [\n        ...this.experiment.conditions.map((condition) => condition.name),\n        'Unassigned',\n      ]\n    },\n\n    arrayData: {\n      get: function() {\n        const newArray = []\n        for (let i = 0; i < this.conditions.length; i++) {\n          newArray.push([])\n        }\n        // All the participant will go to 'Unparticipate' section\n        newArray.push(this.participants)\n        return newArray\n      },\n      set: function(newValue) {\n        this.arrayDataProxy = newValue\n      },\n    },\n  },\n  methods: {\n    ...mapActions({\n      fetchExposures: 'exposures/fetchExposures'\n    }),\n\n    getExposure() {\n      this.fetchExposures(this.experiment.experimentId)\n    },\n\n    submitDistribution() {\n      const requestBody = []\n      const conditionGroupIDMap = {}\n\n      this.getExposure()\n      const firstExposureId = this.exposures\n        .map((expo) => expo.exposureId)\n        .sort((a, b) => a - b)[0]\n\n      const firstExposure = this.exposures.filter(\n        (expo) => expo.exposureId === firstExposureId\n      )[0]\n\n      firstExposure.groupConditionList.map(\n        ({ groupId }, index) => (conditionGroupIDMap[index] = groupId)\n      )\n\n      this.arrayDataProxy.map((arrData, index) =>\n        arrData.map((participant) => {\n          if (conditionGroupIDMap[index] !== undefined) {\n            const temp = {\n              participantId: participant.participantId,\n              consent: participant.consent,\n              dropped: participant.dropped,\n              groupId: conditionGroupIDMap[index],\n            }\n            requestBody.push(temp)\n          }\n        })\n      )\n\n      participantService\n        .updateParticipants(this.experiment.experimentId, requestBody)\n        .then((response) => {\n          if (response?.status === 200) {\n            this.$router.push({\n              name: 'ParticipationSummary',\n              params: { experiment: this.experiment.experimentId },\n            });\n          } else {\n            alert(response.error)\n          }\n        })\n        .catch((response) => {\n          console.log('submitParticipants | catch', { response });\n        })\n    },\n\n    moveToHandler(option, tempSelected) {\n      const selectedParticipantIDs = tempSelected.map(\n        (participant) => participant.participantId\n      )\n\n      const filteredParticipants = this.arrayDataProxy.map(\n        (conditionParticipantMap) =>\n          conditionParticipantMap.filter(\n            (participant) =>\n              !selectedParticipantIDs.includes(participant.participantId)\n          )\n      )\n\n      const idx = this.getConditionNames.indexOf(option)\n      filteredParticipants[idx] = [\n        ...filteredParticipants[idx],\n        ...tempSelected,\n      ]\n\n      this.arrayData = filteredParticipants\n    },\n  },\n  beforeRouteEnter(to, from, next) {\n    //  load participant data before selection screen\n    return (\n      store\n        .dispatch(\"participants/fetchParticipants\", to.params.experiment_id)\n        .then(next, next)\n    );\n  },\n  beforeRouteUpdate(to, from, next) {\n    //  load participant data before selection screen\n    return (\n      store\n        .dispatch(\"participants/fetchParticipants\", to.params.experiment_id)\n        .then(next, next)\n    );\n  },\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationManualDistribution.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationManualDistribution.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ParticipationManualDistribution.vue?vue&type=template&id=db1829aa&\"\nimport script from \"./ParticipationManualDistribution.vue?vue&type=script&lang=js&\"\nexport * from \"./ParticipationManualDistribution.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels})\n"],"sourceRoot":""}