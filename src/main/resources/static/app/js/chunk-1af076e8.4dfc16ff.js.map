{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/assets/all_conditions.svg","webpack:///./src/assets/one_condition.svg","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///./src/views/design/ExperimentType.vue?df31","webpack:///src/views/design/ExperimentType.vue","webpack:///./src/views/design/ExperimentType.vue?6226","webpack:///./src/views/design/ExperimentType.vue"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","module","exports","ripple","disableIconRotate","expandIcon","type","default","hideActions","data","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","$createElement","setBackgroundColor","attrs","tabindex","on","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String","_vm","_h","_c","_self","experiment","conditions","_v","_s","numConditions","exposureType","$event","saveType","staticRenderFns","component","VAlert","VBtn","VCol","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VRow"],"mappings":"gLAce,qBAAqB,CAClCA,KADkC,qBAGlCC,QAHkC,WAIhC,MAAO,CACLC,gBAAiBC,OAIrBC,MAAO,CACLC,UADK,QAELC,SAFK,QAGLC,KAHK,QAILC,MAJK,QAKLC,UALK,QAMLC,MANK,QAOLC,OAPK,QAQLC,SARK,QASLC,KAAMC,SAGRC,SAAU,CACRC,QADQ,WAEN,wCACK,qCADE,OAAP,IAEE,sBAFK,EAGL,gCAAiCb,KAH5B,UAIL,2BAA4BA,KAJvB,KAKL,4BAA6BA,KALxB,MAML,gCAAiCA,KAN5B,UAOL,4BAA6BA,KAPxB,MAQL,6BAA8BA,KARzB,OASL,2BAA4BA,KAAKU,SAKvCI,QArCkC,WAuC5Bd,KAAKe,OAAOC,eAAhB,WACE,eAAS,SAAU,WAAnB,MAKAC,MAAA,QAAcjB,KAAd,QACAA,KAAKkB,MAAMC,OADX,GADF,mBAGSnB,KAAKkB,MAAZ,IAEA,eAAS,+BAAgC,kBAAzC,OAIJE,QAAS,CACPC,WADO,SACG,KACR,IAAMH,EAAQlB,KAAKsB,SAASC,EAA5B,GACMC,EAAYxB,KAAKsB,SAASC,EAAME,EAAtC,GAEAF,EAAA,SAAgBvB,KAAK0B,aAArB,GACAH,EAAA,aAAoBvB,KAAK0B,aAAzB,Q,6DCvEN,4EAcMC,EAAa,eAAO,EAAD,YAGvB,eAAiB,6CAHnB,sBAWe,OAAAA,EAAA,gBAAoC,CACjD9B,KADiD,4BAGjDe,SAAU,CACRgB,SADQ,WAEN,OAAO5B,KAAK6B,eAAZ,WAIJf,QATiD,WAU/Cd,KAAA,+BAAAA,OAGF8B,cAbiD,WAc/C9B,KAAA,oCAGF+B,OAjBiD,SAiB3C,GAAG,WACP,OAAOC,EAAE,EAAD,KAAoBhC,KAAKiC,iBAAgB,iBAAM,CACrDD,EAAE,MAAO,qBAAwB,EAAxB,MAAoC,CAC3CE,YAD2C,4BAE3CC,WAAY,CAAC,CACXtC,KADW,OAEXqB,MAAO,EAAKU,aAEZ,CACFI,EAAE,MAAO,CAAEI,MAAO,mCAAqC,eAR3D,e,uBC7CJC,EAAOC,QAAU,IAA0B,mC,qBCA3CD,EAAOC,QAAU,IAA0B,kC,sICmBrCX,EAAa,eAAO,EAAD,KAEvB,eAAiB,4CAFnB,sBAUe,OAAAA,EAAA,gBAAoC,CACjD9B,KADiD,2BAGjDsC,WAAY,CAAEI,OAAA,QAEdtC,MAAO,CACLuC,kBADK,QAELC,WAAY,CACVC,KADU,OAEVC,QAAS,WAEXC,YANK,QAOLL,OAAQ,CACNG,KAAM,CAAC/B,QADD,QAENgC,SAAS,IAIbE,KAAM,iBAAO,CACXC,cAAc,IAGhBlC,SAAU,CACRC,QADQ,WAEN,MAAO,CACL,mCAAoCb,KAD/B,SAEL,sCAAuCA,KAAK8C,eAGhDlB,SAPQ,WAQN,OAAO5B,KAAK6B,eAAZ,UAEFkB,WAVQ,WAWN,OAAO/C,KAAK6B,eAAZ,YAEFmB,WAbQ,WAcN,OAAOhD,KAAK6B,eAAZ,aAIJf,QAxCiD,WAyC/Cd,KAAA,8BAAAA,OAGF8B,cA5CiD,WA6C/C9B,KAAA,mCAGFoB,QAAS,CACP6B,QADO,SACA,GACLjD,KAAA,kBAEFkD,QAJO,WAKL,IAAMC,EAAO,eAAQnD,KAAR,YACX,CAACA,KAAKoD,eAAe,EAApB,KAA2BpD,KAD9B,aAGA,OAAOA,KAAKoD,eAAe,EAApB,KAAqC,CAC1CpD,KAAKoD,eAAe,MAAO,CACzBlB,YADyB,iCAEzBE,MAAO,CACL,iDAAkDpC,KAAKwC,mBAEzDL,WAAY,CAAC,CACXtC,KADW,OAEXqB,OAAQlB,KAAK+C,cARnB,OAeJhB,OAvEiD,SAuE3C,GAAG,WACP,OAAOC,EAAE,SAAUhC,KAAKqD,mBAAmBrD,KAAxB,MAAoC,CACrDkC,YADqD,2BAErDE,MAAOpC,KAF8C,QAGrDsD,MAAO,CACLC,SAAUvD,KAAK+C,YAAL,EADL,KAELL,KAFK,SAGL,gBAAiB1C,KAAK4B,UAExBO,WAAY,CAAC,CACXtC,KADW,SAEXqB,MAAOlB,KAAKuC,SAEdiB,GAAI,iCACCxD,KADD,YAAF,IAEAyD,MAAOzD,KAFL,QAGF0D,UAAW,kBAAO,gBAHhB,GAIFC,QAAS,kBAAO,gBAAoB,OAEpC,CACF,eAAQ3D,KAAM,UAAW,CAAE4D,KAAM5D,KAAK4B,WADpC,GAEF5B,KAAK4C,aAAe5C,KApBtB,gB,kGClFW,sBACb,eAAgB,sCADG,sBAEnB,eAAmB,kBAAkB,IAFxB,OAIN,CACPH,KADO,oBAGPI,MAAO,CACLE,SADK,QAELM,SAAUE,SAGZkC,KARO,WASL,MAAO,CACLgB,QADK,KAELC,OAFK,KAGLC,cAAc,IAIlBnD,SAAU,CACRC,QADQ,WAEN,uBACE,4BAA6Bb,KADxB,SAEL,iCAAkCA,KAF7B,aAGL,8BAA+BA,KAH1B,YAIFA,KAAKgE,eAGZjB,WATQ,WAUN,OAAO/C,KAAKD,gBAAgBI,UAAYH,KAAxC,UAEFgD,WAZQ,WAaN,OAAOhD,KAAKD,gBAAgBU,UAAYT,KAAxC,WAIJoB,QAAS,CACP6C,gBADO,SACQ,GACbjE,KAAA,WAEFkE,kBAJO,WAKLlE,KAAA,cAEFmE,eAPO,SAOO,GACZnE,KAAA,SACAoE,EAAA,YAAgBpE,KAAhB,UAEFqE,iBAXO,WAYLrE,KAAA,aAEFiD,QAdO,SAcA,GACDqB,EAAJ,QAActE,KAAK8D,OAAL,WAEd9D,KAAA,iBAEAA,KAAA,YAAmBA,KAAnB,YAAsCA,KAAtC,UAEFuE,OArBO,WAqBD,WAEAvE,KAAJ,UAAkBA,KAAK6D,QAAQW,UAAW,GAC1CxE,KAAA,WAAe,kBAAM,QAArB,eAIJ+B,OA7DO,SA6DD,GACJ,OAAOC,EAAE,MAAO,CACdE,YADc,oBAEdE,MAAOpC,KAFO,QAGdsD,MAAO,CACL,gBAAiBmB,OAAOzE,KAAD,YAExB,eANH,W,yCCrFJ,IAAI+B,EAAS,WAAa,IAAI2C,EAAI1E,KAAS2E,EAAGD,EAAItB,eAAmBwB,EAAGF,EAAIG,MAAMD,IAAID,EAAG,OAAOC,EAAG,MAAM,CAAEF,EAAII,YAAcJ,EAAII,WAAWC,WAAY,CAACH,EAAG,KAAK,CAAC1C,YAAY,QAAQ,CAAC0C,EAAG,OAAO,CAACF,EAAIM,GAAG,qBAAqBJ,EAAG,SAAS,CAACF,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,eAAe,mBAAmBN,EAAG,MAAMA,EAAG,MAAMA,EAAG,OAAO,CAACF,EAAIM,GAAG,6EAA6EJ,EAAG,qBAAqB,CAAC1C,YAAY,2BAA2BoB,MAAM,CAAC,KAAO,KAAK,CAACsB,EAAG,oBAAoB,CAACxC,MAAM,CAAC,8BAA4D,WAA9BsC,EAAII,WAAWK,eAA0B,CAACP,EAAG,2BAA2B,CAACtB,MAAM,CAAC,eAAe,KAAK,CAACsB,EAAG,MAAM,CAACtB,MAAM,CAAC,IAAM,EAAQ,QAA+B,IAAM,oBAAoBoB,EAAIM,GAAG,qBAAqBJ,EAAG,4BAA4B,CAACA,EAAG,IAAI,CAACF,EAAIM,GAAG,uMAAuMJ,EAAG,QAAQ,CAACtB,MAAM,CAAC,MAAQ,UAAU,UAAY,KAAKE,GAAG,CAAC,MAAQ,SAAS4B,GAAQ,OAAOV,EAAIW,SAAS,aAAa,CAACX,EAAIM,GAAG,aAAa,IAAI,GAAGJ,EAAG,oBAAoB,CAACxC,MAAM,CAAC,8BAA4D,YAA9BsC,EAAII,WAAWK,eAA2B,CAACP,EAAG,2BAA2B,CAACtB,MAAM,CAAC,eAAe,KAAK,CAACsB,EAAG,MAAM,CAACtB,MAAM,CAAC,IAAM,EAAQ,QAA8B,IAAM,wBAAwBoB,EAAIM,GAAG,yBAAyBJ,EAAG,4BAA4B,CAACA,EAAG,IAAI,CAACF,EAAIM,GAAG,gLAAgLJ,EAAG,QAAQ,CAACtB,MAAM,CAAC,MAAQ,UAAU,UAAY,KAAKE,GAAG,CAAC,MAAQ,SAAS4B,GAAQ,OAAOV,EAAIW,SAAS,cAAc,CAACX,EAAIM,GAAG,aAAa,IAAI,IAAI,IAAI,CAACJ,EAAG,UAAU,CAACtB,MAAM,CAAC,UAAY,GAAG,KAAO,UAAU,CAACsB,EAAG,QAAQ,CAACtB,MAAM,CAAC,MAAQ,WAAW,CAACsB,EAAG,QAAQ,CAAC1C,YAAY,QAAQ,CAACwC,EAAIM,GAAG,4BAA4B,IAAI,KAAK,IAC17DM,EAAkB,G,wBC6CtB,GACA,sBACA,qBACA,UACA,cADA,WACA,QACA,yGAGA,yCACA,gBACA,4BACA,kDAHA,IAKA,SALA,SAKA,cACA,kBACA,iBAEA,qBACA,kBAEA,yBACA,kBACA,gBAEA,sCACA,sCACA,gFACA,qCACA,uEAEA,oCAGA,2CAGA,mBACA,4DCnFuW,I,iICOnWC,EAAY,eACd,EACAxD,EACAuD,GACA,EACA,KACA,KACA,MAIa,aAAAC,EAAiB,QAYhC,IAAkBA,EAAW,CAACC,SAAA,KAAOC,OAAA,KAAKC,OAAA,KAAKC,kBAAA,KAAgBC,yBAAA,KAAuBC,wBAAA,KAAsBC,mBAAA,KAAiBC,OAAA","file":"js/chunk-1af076e8.4dfc16ff.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","module.exports = __webpack_public_path__ + \"img/all_conditions.c4f6b74f.svg\";","module.exports = __webpack_public_path__ + \"img/one_condition.861bd905.svg\";","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.experiment && _vm.experiment.conditions)?[_c('h1',{staticClass:\"mb-5\"},[_c('span',[_vm._v(\"You have defined \"),_c('strong',[_vm._v(_vm._s(_vm.numConditions)+\" conditions\")])]),_c('br'),_c('br'),_c('span',[_vm._v(\"How do you want students to be exposed to these different conditions?\")])]),_c('v-expansion-panels',{staticClass:\"v-expansion-panels--icon\",attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{class:{'v-expansion-panel--selected':_vm.experiment.exposureType==='WITHIN'}},[_c('v-expansion-panel-header',{attrs:{\"hide-actions\":\"\"}},[_c('img',{attrs:{\"src\":require(\"@/assets/all_conditions.svg\"),\"alt\":\"all conditions\"}}),_vm._v(\" All conditions\")]),_c('v-expansion-panel-content',[_c('p',[_vm._v(\"All students are exposed to every condition, in different orders. This way you can compare how the different conditions affected each individual student. This is called a within-subject design.\")]),_c('v-btn',{attrs:{\"color\":\"primary\",\"elevation\":\"0\"},on:{\"click\":function($event){return _vm.saveType('WITHIN')}}},[_vm._v(\"Select\")])],1)],1),_c('v-expansion-panel',{class:{'v-expansion-panel--selected':_vm.experiment.exposureType==='BETWEEN'}},[_c('v-expansion-panel-header',{attrs:{\"hide-actions\":\"\"}},[_c('img',{attrs:{\"src\":require(\"@/assets/one_condition.svg\"),\"alt\":\"only one condition\"}}),_vm._v(\" Only one condition\")]),_c('v-expansion-panel-content',[_c('p',[_vm._v(\"Each student is only exposed to one condition, so that you can compare how the different conditions affected different students. This is called a between-subjects design.\")]),_c('v-btn',{attrs:{\"color\":\"primary\",\"elevation\":\"0\"},on:{\"click\":function($event){return _vm.saveType('BETWEEN')}}},[_vm._v(\"Select\")])],1)],1)],1)]:[_c('v-alert',{attrs:{\"prominent\":\"\",\"type\":\"error\"}},[_c('v-row',{attrs:{\"align\":\"center\"}},[_c('v-col',{staticClass:\"grow\"},[_vm._v(\" No conditions found \")])],1)],1)]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<template v-if=\"experiment && experiment.conditions\">\n\t\t\t<h1 class=\"mb-5\">\n\t\t\t\t<span>You have defined <strong>{{ numConditions }} conditions</strong></span><br><br>\n\t\t\t\t<span>How do you want students to be exposed to these different conditions?</span>\n\t\t\t</h1>\n\n\t\t\t<v-expansion-panels class=\"v-expansion-panels--icon\" flat>\n\n\t\t\t\t<v-expansion-panel :class=\"{'v-expansion-panel--selected':experiment.exposureType==='WITHIN'}\">\n\t\t\t\t\t<v-expansion-panel-header hide-actions><img src=\"@/assets/all_conditions.svg\" alt=\"all conditions\"> All conditions</v-expansion-panel-header>\n\t\t\t\t\t<v-expansion-panel-content>\n\t\t\t\t\t\t<p>All students are exposed to every condition, in different orders. This way you can compare how the different conditions affected each individual student. This is called a within-subject design.</p>\n\t\t\t\t\t\t<v-btn @click=\"saveType('WITHIN')\" color=\"primary\" elevation=\"0\">Select</v-btn>\n\t\t\t\t\t</v-expansion-panel-content>\n\t\t\t\t</v-expansion-panel>\n\n\t\t\t\t<v-expansion-panel :class=\"{'v-expansion-panel--selected':experiment.exposureType==='BETWEEN'}\">\n\t\t\t\t\t<v-expansion-panel-header hide-actions><img src=\"@/assets/one_condition.svg\" alt=\"only one condition\"> Only one condition</v-expansion-panel-header>\n\t\t\t\t\t<v-expansion-panel-content>\n\t\t\t\t\t\t<p>Each student is only exposed to one condition, so that you can compare how the different conditions affected different students. This is called a between-subjects design.</p>\n\t\t\t\t\t\t<v-btn @click=\"saveType('BETWEEN')\" color=\"primary\" elevation=\"0\">Select</v-btn>\n\t\t\t\t\t</v-expansion-panel-content>\n\t\t\t\t</v-expansion-panel>\n\n\t\t\t</v-expansion-panels>\n\t\t</template>\n\t\t<template v-else>\n\t\t\t<v-alert\n\t\t\t\tprominent\n\t\t\t\ttype=\"error\"\n\t\t\t>\n\t\t\t\t<v-row align=\"center\">\n\t\t\t\t\t<v-col class=\"grow\">\n\t\t\t\t\t\tNo conditions found\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t</v-alert>\n\t\t</template>\n\t</div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n\tname: 'ExperimentType',\n\tprops: ['experiment'],\n\tcomputed: {\n\t\tnumConditions() {\n\t\t\treturn this.experiment?.conditions?.length || 0\n\t\t}\n\t},\n\tmethods: {\n\t\t...mapActions({\n\t\t\treportStep: 'api/reportStep',\n\t\t\tupdateExperiment: 'experiment/updateExperiment',\n\t\t}),\n\t\tsaveType(type) {\n\t\t\tconst e = this.experiment\n\t\t\te.exposureType = type\n\n\t\t\tconst experimentId = e.experimentId\n\t\t\tconst step = \"exposure_type\"\n\n\t\t\tthis.updateExperiment(e)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\t// report the current step\n\t\t\t\t\t\t\tthis.reportStep({experimentId, step})\n\t\t\t\t\t\t\tif (this.experiment.exposureType==='BETWEEN') {\n\t\t\t\t\t\t\t\tthis.$router.push({name:'ExperimentDesignDefaultCondition', params:{experiment: experimentId}})\n\t\t\t\t\t\t\t} else if(this.experiment.exposureType==='WITHIN') {\n\t\t\t\t\t\t\t\tthis.$router.push({name:'ExperimentDesignSummary', params:{experiment: experimentId}})\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\talert(\"Select an experiment type\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(\"error: \", response.statusText || response.status)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(response => {\n\t\t\t\t\t\tconsole.log(\"updateExperiment | catch\", {response})\n\t\t\t\t\t})\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentType.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentType.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExperimentType.vue?vue&type=template&id=b1a15b88&\"\nimport script from \"./ExperimentType.vue?vue&type=script&lang=js&\"\nexport * from \"./ExperimentType.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAlert,VBtn,VCol,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VRow})\n"],"sourceRoot":""}