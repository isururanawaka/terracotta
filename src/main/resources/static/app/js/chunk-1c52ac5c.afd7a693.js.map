{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/views/participation/ParticipationSummary.vue?d6e2","webpack:///src/views/participation/ParticipationSummary.vue","webpack:///./src/views/participation/ParticipationSummary.vue?93ee","webpack:///./src/views/participation/ParticipationSummary.vue?7b54","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///./src/views/participation/ParticipationSummary.vue?d33d"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","_vm","_h","$createElement","_c","_self","_m","experiment","attrs","_v","_s","participationType","_e","consent","title","on","openPDF","nextSection","staticRenderFns","type","getConsentFile","experimentId","pdfWindow","opener","document","write","$router","push","params","saveExit","filePointer","beforeRouteEnter","to","meta","selectionType","from","next","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","ripple","disableIconRotate","expandIcon","default","hideActions","data","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"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","file":"js/chunk-1c52ac5c.afd7a693.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),(_vm.experiment)?[(this.experiment.participationType)?_c('v-expansion-panels',{attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3 mb-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\"Selection Method\")])]),_c('v-expansion-panel-content',[_c('p',[_vm._v(_vm._s(_vm.participationType))])])],1)],1):_vm._e(),(this.experiment.participationType === 'CONSENT')?_c('v-expansion-panels',{attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3 mb-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\"Assignment Title\")])]),_c('v-expansion-panel-content',[_c('p',[_vm._v(_vm._s(this.experiment.consent.title))])])],1)],1):_vm._e(),(this.experiment.participationType === 'CONSENT')?_c('v-expansion-panels',{attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3 mb-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\"Informed Consent\")])]),_c('v-expansion-panel-content',[_c('button',{staticClass:\"pdfButton\",on:{\"click\":_vm.openPDF}},[_vm._v(\"Consent File\")])])],1)],1):_vm._e()]:_vm._e(),_c('v-btn',{staticClass:\"mt-3\",attrs:{\"elevation\":\"0\",\"color\":\"primary\"},on:{\"click\":_vm.nextSection}},[_vm._v(\" Continue to next section \")])],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{staticClass:\"my-3\"},[_c('span',{staticClass:\"green--text font-weight-bold\"},[_vm._v(\"You've completed section 2.\")]),_c('br'),_vm._v(\" Here's a summary of your experiment participation. \")])}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <h1 class=\"my-3\">\n      <span class=\"green--text font-weight-bold\"\n        >You've completed section 2.</span\n      ><br />\n      Here's a summary of your experiment participation.\n    </h1>\n    <template v-if=\"experiment\">\n      <v-expansion-panels flat v-if=\"this.experiment.participationType\">\n        <v-expansion-panel class=\"py-3 mb-3\">\n          <v-expansion-panel-header\n            ><strong>Selection Method</strong></v-expansion-panel-header\n          >\n          <v-expansion-panel-content>\n            <p>{{ participationType }}</p>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n\n      <v-expansion-panels\n        flat\n        v-if=\"this.experiment.participationType === 'CONSENT'\"\n      >\n        <v-expansion-panel class=\"py-3 mb-3\">\n          <v-expansion-panel-header\n            ><strong>Assignment Title</strong></v-expansion-panel-header\n          >\n          <v-expansion-panel-content>\n            <p>{{ this.experiment.consent.title }}</p>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n\n      <v-expansion-panels\n        flat\n        v-if=\"this.experiment.participationType === 'CONSENT'\"\n      >\n        <v-expansion-panel class=\"py-3 mb-3\">\n          <v-expansion-panel-header\n            ><strong>Informed Consent</strong></v-expansion-panel-header\n          >\n          <v-expansion-panel-content>\n            <button class='pdfButton' @click=\"openPDF\">Consent File</button>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </template>\n    <v-btn elevation=\"0\" color=\"primary\" class=\"mt-3\" @click=\"nextSection\">\n      Continue to next section\n    </v-btn>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"ParticipationSummary\",\n  props: [\"experiment\"],\n  computed: {\n    ...mapGetters({\n      consent: 'consent/consent'\n    }),\n    participationType() {\n      let type = ''\n\n      switch (this.experiment.participationType) {\n        case 'CONSENT':\n          type = 'Invited students to consent'\n          break\n        case 'MANUAL':\n          type = 'Manually determined students'\n          break\n        case 'AUTO':\n          type = 'Automatically included all students'\n          break\n      }\n\n      return type\n    }\n  },\n  methods: {\n    ...mapActions({\n      getConsentFile: \"consent/getConsentFile\"\n    }),\n    openPDF() {\n      this.getConsentFile(this.experiment.experimentId)\n\n      // Second Parameter intentionally left blank\n      let pdfWindow = window.open('', '', '_blank')\n      pdfWindow.opener = null\n      pdfWindow.document.write(\n        \"<iframe width='100%' height='100%' src='data:application/pdf;base64, \" +\n          encodeURI(this.consent.file) +\n          \"'></iframe>\"\n      )\n      return false\n    },\n    nextSection() {\n      this.$router.push({\n        name: 'AssignmentIntro',\n        params: { experiment: this.experiment.experimentId },\n      })\n    },\n    saveExit() {\n      this.$router.push({\n        name: 'Home',\n      });\n    },\n  },\n  created() {\n    if (this.experiment.consent.filePointer) {\n      this.getConsentFile(this.experiment.experimentId);\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    // Updating selection type for custom steps\n    to.meta.selectionType = from.meta.selectionType\n    next()\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.v-expansion-panel {\n  border: 1px solid map-get($grey, 'lighten-2');\n\n  .pdfButton {\n\tbackground: none!important;\n\tborder: none;\n\tpadding: 0!important;\n\tcolor: #069;\n\ttext-decoration: underline;\n\tcursor: pointer;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationSummary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationSummary.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ParticipationSummary.vue?vue&type=template&id=506e5380&\"\nimport script from \"./ParticipationSummary.vue?vue&type=script&lang=js&\"\nexport * from \"./ParticipationSummary.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ParticipationSummary.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationSummary.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}