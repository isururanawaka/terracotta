{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/assets/assignments_summary.svg","webpack:///./src/assets/all_conditions.svg","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/views/ExperimentSummary.vue?8d20","webpack:///./src/views/ExperimentSummaryStatus.vue?02a8","webpack:///src/views/ExperimentSummaryStatus.vue","webpack:///./src/views/ExperimentSummaryStatus.vue?ee5c","webpack:///./src/views/ExperimentSummaryStatus.vue?def3","webpack:///src/views/ExperimentSummary.vue","webpack:///./src/views/ExperimentSummary.vue?1839","webpack:///./src/views/ExperimentSummary.vue?67a8","webpack:///./src/assets/one_condition.svg","webpack:///./src/assets/terracotta_logo_mark.svg","webpack:///./src/views/ExperimentSummary.vue?7b94","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///./src/views/ExperimentSummaryStatus.vue?0aef","webpack:///./src/assets/design_summary.svg","webpack:///./src/assets/participants_summary.svg"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","module","exports","collection","collectionStrong","init","arguments","undefined","_vm","_h","$createElement","_c","_self","attrs","_v","_s","experiment","title","model","callback","$$v","tab","expression","_l","key","_e","panel","image","description","sectionValuesMap","on","$event","handleEdit","editSection","type","condition","conditionId","rawName","exposure","exposureId","sortedGroups","groupConditionList","group","groupId","groupName","conditionName","groupNameConditionMapping","assignments","filter","a","assignment","assignmentId","treatments","conditions","hasTreatment","goToBuilder","consent","acceptedParticipants","potentialParticipants","staticRenderFns","scopedSlots","_u","fn","answeredConsentCount","expectedConsent","proxy","eIndex","assignmentCompletion","find","complete","submissionsCompleted","submissionsExpected","experimentOutcomes","outcome","outcomeId","external","ref","_g","_b","handleDeleteOutcome","console","log","handleCreateOutcome","experiment_id","parseInt","experimentId","arr","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VIcon","VList","VListItem","VListItemTitle","VMenu","VSimpleTable","components","Design","designDetails","Participants","participantDetails","Assignments","assignmentDetails","data","$router","push","groupConditionMap","newGroups","beforeRouteEnter","store","beforeRouteUpdate","VCard","VChip","VCol","VContainer","VDivider","VImg","VListItemAction","VListItemContent","VRow","VTab","VTabItem","VTabs","VTabsItems","ripple","disableIconRotate","expandIcon","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"gLAce,qBAAqB,CAClCA,KADkC,qBAGlCC,QAHkC,WAIhC,MAAO,CACLC,gBAAiBC,OAIrBC,MAAO,CACLC,UADK,QAELC,SAFK,QAGLC,KAHK,QAILC,MAJK,QAKLC,UALK,QAMLC,MANK,QAOLC,OAPK,QAQLC,SARK,QASLC,KAAMC,SAGRC,SAAU,CACRC,QADQ,WAEN,wCACK,qCADE,OAAP,IAEE,sBAFK,EAGL,gCAAiCb,KAH5B,UAIL,2BAA4BA,KAJvB,KAKL,4BAA6BA,KALxB,MAML,gCAAiCA,KAN5B,UAOL,4BAA6BA,KAPxB,MAQL,6BAA8BA,KARzB,OASL,2BAA4BA,KAAKU,SAKvCI,QArCkC,WAuC5Bd,KAAKe,OAAOC,eAAhB,WACE,eAAS,SAAU,WAAnB,MAKAC,MAAA,QAAcjB,KAAd,QACAA,KAAKkB,MAAMC,OADX,GADF,mBAGSnB,KAAKkB,MAAZ,IAEA,eAAS,+BAAgC,kBAAzC,OAIJE,QAAS,CACPC,WADO,SACG,KACR,IAAMH,EAAQlB,KAAKsB,SAASC,EAA5B,GACMC,EAAYxB,KAAKsB,SAASC,EAAME,EAAtC,GAEAF,EAAA,SAAgBvB,KAAK0B,aAArB,GACAH,EAAA,aAAoBvB,KAAK0B,aAAzB,Q,6DCvEN,4EAcMC,EAAa,eAAO,EAAD,YAGvB,eAAiB,6CAHnB,sBAWe,OAAAA,EAAA,gBAAoC,CACjD9B,KADiD,4BAGjDe,SAAU,CACRgB,SADQ,WAEN,OAAO5B,KAAK6B,eAAZ,WAIJf,QATiD,WAU/Cd,KAAA,+BAAAA,OAGF8B,cAbiD,WAc/C9B,KAAA,oCAGF+B,OAjBiD,SAiB3C,GAAG,WACP,OAAOC,EAAE,EAAD,KAAoBhC,KAAKiC,iBAAgB,iBAAM,CACrDD,EAAE,MAAO,qBAAwB,EAAxB,MAAoC,CAC3CE,YAD2C,4BAE3CC,WAAY,CAAC,CACXtC,KADW,OAEXqB,MAAO,EAAKU,aAEZ,CACFI,EAAE,MAAO,CAAEI,MAAO,mCAAqC,eAR3D,e,uBC7CJC,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,mC,kCCC3C,IAAIC,EAAa,EAAQ,QACrBC,EAAmB,EAAQ,QAI/BH,EAAOC,QAAUC,EAAW,OAAO,SAAUE,GAC3C,OAAO,WAAiB,OAAOA,EAAKzC,KAAM0C,UAAUvB,OAASuB,UAAU,QAAKC,MAC3EH,I,6FCRH,IAAIT,EAAS,WAAa,IAAIa,EAAI5C,KAAS6C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAAEH,EAAc,WAAEG,EAAG,cAAc,CAACA,EAAG,QAAQ,CAACb,YAAY,OAAOe,MAAM,CAAC,QAAU,kBAAkB,CAACF,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,IAAI,CAACb,YAAY,oBAAoB,CAACa,EAAG,QAAQ,CAACb,YAAY,OAAOe,MAAM,CAAC,IAAM,EAAQ,QAAqC,IAAM,kBAAkB,aAAa,KAAK,YAAY,QAAQF,EAAG,OAAO,CAACH,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,WAAWC,WAAW,MAAM,GAAGN,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,OAAO,CAACF,EAAG,aAAaA,EAAG,SAAS,CAACE,MAAM,CAAC,UAAY,KAAKK,MAAM,CAACpC,MAAO0B,EAAO,IAAEW,SAAS,SAAUC,GAAMZ,EAAIa,IAAID,GAAKE,WAAW,QAAQd,EAAIe,GAAIf,EAAS,OAAE,SAASrB,GAAM,OAAOwB,EAAG,QAAQ,CAACa,IAAIrC,GAAM,CAACqB,EAAIM,GAAG,IAAIN,EAAIO,GAAG5B,GAAM,UAAS,GAAGwB,EAAG,YAAY,CAACb,YAAY,SAASa,EAAG,eAAe,CAACO,MAAM,CAACpC,MAAO0B,EAAO,IAAEW,SAAS,SAAUC,GAAMZ,EAAIa,IAAID,GAAKE,WAAW,QAAQd,EAAIe,GAAIf,EAAS,OAAE,SAASrB,GAAM,OAAOwB,EAAG,aAAa,CAACa,IAAIrC,EAAKW,YAAY,QAAQ,CAAW,WAATX,EAAmB,CAACwB,EAAG,4BAA4B,CAACE,MAAM,CAAC,WAAaL,EAAIQ,eAAeR,EAAIiB,KAAe,UAATtC,EAAkB,CAACwB,EAAG,SAAS,CAACb,YAAY,8CAA8Ce,MAAM,CAAC,SAAW,KAAK,CAACF,EAAG,IAAI,CAACb,YAAY,QAAQ,CAACa,EAAG,SAAS,CAACH,EAAIM,GAAG,WAAWN,EAAIM,GAAG,sIAAsIH,EAAG,qBAAqB,CAACb,YAAY,gCAAgCe,MAAM,CAAC,KAAO,KAAKL,EAAIe,GAAIf,EAAe,aAAE,SAASkB,GAAO,OAAOf,EAAG,oBAAoB,CAACa,IAAIE,EAAMT,OAAO,CAACN,EAAG,2BAA2B,CAACA,EAAG,MAAM,CAACb,YAAY,kBAAkB,CAACa,EAAG,MAAM,CAACb,YAAY,MAAM,CAACa,EAAG,QAAQ,CAACb,YAAY,OAAOe,MAAM,CAAC,IAAMa,EAAMC,MAAM,IAAMD,EAAMT,MAAM,aAAa,KAAK,YAAY,SAAS,GAAGN,EAAG,MAAM,CAACb,YAAY,oBAAoB,CAACa,EAAG,KAAK,CAACH,EAAIM,GAAGN,EAAIO,GAAGW,EAAMT,UAAUN,EAAG,OAAO,CAACH,EAAIM,GAAGN,EAAIO,GAAGW,EAAME,sBAAsBjB,EAAG,4BAA4B,CAACA,EAAG,QAAQH,EAAIe,GAAIf,EAAIqB,iBAAiBH,EAAMT,QAAQ,SAAS9B,GAAM,OAAOwB,EAAG,KAAK,CAACa,IAAIrC,EAAK8B,MAAMnB,YAAY,YAAY,CAACa,EAAG,KAAK,CAACb,YAAY,kBAAkB,CAAC,CAACa,EAAG,MAAM,CAACb,YAAY,UAAU,CAACa,EAAG,OAAO,CAACb,YAAY,WAAW,CAACU,EAAIM,GAAGN,EAAIO,GAAG5B,EAAK8B,UAAUN,EAAG,IAAI,CAACmB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAIwB,WAAW7C,EAAK8C,gBAAgB,CAACzB,EAAIM,GAAG,cAAc,GAAGH,EAAG,KAAK,CAACb,YAAY,mBAAmB,CAAgB,WAAdX,EAAK+C,KAAmB,CAAC1B,EAAIM,GAAG,IAAIN,EAAIO,GAAG5B,EAAKyC,aAAa,MAAMpB,EAAIiB,KAAoB,UAAdtC,EAAK+C,KAAkB1B,EAAIe,GAAIpC,EAAgB,aAAE,SAASgD,EAAU9C,GAAO,OAAOsB,EAAG,QAAQ,CAACa,IAAIW,EAAUC,YAAYtC,YAAY,2BAA2Be,MAAM,CAAC,IAAO,aAAgBsB,EAAqB,cAAK,CAACxB,EAAG,OAAO,CAACb,YAAY,iBAAiB,CAACU,EAAIM,GAAG,aAAaN,EAAIO,GAAG1B,EAAQ,MAAMsB,EAAG,MAAMA,EAAG,OAAO,CAACH,EAAIM,GAAGN,EAAIO,GAAGoB,EAAU1E,SAASkD,EAAG,OAAO,CAACZ,WAAW,CAAC,CAACtC,KAAK,OAAO4E,QAAQ,SAASvD,MAAOqD,EAA0B,iBAAEb,WAAW,+BAA+BxB,YAAY,mDAAmD,CAACa,EAAG,SAAS,CAACH,EAAIM,GAAG,eAAeH,EAAG,OAAO,CAACH,EAAIM,GAAG,cAAc,QAAON,EAAIiB,KAAoB,aAAdtC,EAAK+C,KAAqB,CAAuB,WAArB/C,EAAKyC,YAA0B,CAACjB,EAAG,MAAM,CAACb,YAAY,qBAAqBe,MAAM,CAAC,IAAM,EAAQ,QAA+B,IAAM,oBAAoBF,EAAG,OAAO,CAACb,YAAY,sBAAsB,CAACU,EAAIM,GAAG,oBAAoBH,EAAG,IAAI,CAACb,YAAY,mBAAmB,CAACU,EAAIM,GAAG,0MAA0MN,EAAIiB,KAA2B,YAArBtC,EAAKyC,YAA2B,CAACjB,EAAG,MAAM,CAACb,YAAY,qBAAqBe,MAAM,CAAC,IAAM,EAAQ,QAA8B,IAAM,oBAAoBF,EAAG,OAAO,CAACb,YAAY,sBAAsB,CAACU,EAAIM,GAAG,wBAAwBH,EAAG,IAAI,CAACb,YAAY,mBAAmB,CAACU,EAAIM,GAAG,mLAAmLN,EAAIiB,MAAMjB,EAAIiB,KAAoB,gBAAdtC,EAAK+C,KAAwB,CAAC1B,EAAIe,GAAIf,EAAa,WAAE,SAAS8B,EAASjD,GAAO,MAAO,CAACsB,EAAG,MAAM,CAACa,IAAIc,EAASC,WAAWzC,YAAY,uBAAuB,CAACa,EAAG,OAAO,CAACb,YAAY,mBAAmB,CAACU,EAAIM,GAAG,iBAAiBN,EAAIO,GAAG1B,EAAQ,GAAG,OAAOsB,EAAG,MAAMH,EAAIe,GAAIf,EAAIgC,aACztIF,EAASG,qBACR,SAASC,GAAO,OAAO/B,EAAG,MAAM,CAACa,IAAIkB,EAAMC,QAAQ7C,YAAY,cAAc,CAACU,EAAIM,GAAG,IAAIN,EAAIO,GAAG2B,GAAO,kBAAkB/B,EAAG,SAAS,CAACa,IAAIkB,EAAME,UAAYF,EAAMG,cAAc/C,YAAY,OAAOe,MAAM,CAAC,MAAQ,UAAU,MAAQ,KAAK,CAACL,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAIsC,0BAA2BR,EAASG,oBAAqBC,QAAY,MAAK/B,EAAG,qBAAqB,CAACb,YAAY,+BAA+Be,MAAM,CAAC,KAAO,KAAKL,EAAIe,GAAIf,EAAIuC,YAAYC,QACxb,SAAUC,GAAK,OAAOA,EAAEV,aAAeD,EAASC,eAC/C,SAASW,GAAY,OAAOvC,EAAG,oBAAoB,CAACa,IAAI0B,EAAWC,cAAc,CAACxC,EAAG,2BAA2B,CAACH,EAAIM,GAAG,IAAIN,EAAIO,GAAGmC,EAAWjC,OAAO,KAAKT,EAAIO,GAAImC,EAAWE,YAAcF,EAAWE,WAAWrE,QAAW,GAAG,IAAIyB,EAAIO,GAAGP,EAAI6C,WAAWtE,QAAU,GAAG,QAAQ4B,EAAG,4BAA4B,CAACA,EAAG,SAAS,CAACb,YAAY,QAAQU,EAAIe,GAAIf,EAAc,YAAE,SAAS2B,GAAW,OAAOxB,EAAG,cAAc,CAACa,IAAIW,EAAUC,YAAYtC,YAAY,uBAAuB,CAACa,EAAG,sBAAsB,CAACA,EAAG,IAAI,CAACb,YAAY,qCAAqC,CAACU,EAAIM,GAAG,IAAIN,EAAIO,GAAGoB,EAAU1E,MAAM,SAASkD,EAAG,qBAAqB,CAChmBH,EAAI8C,aACFnB,EAAUC,YACVc,EAAWC,cAEb,CAACxC,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,GAAG,SAAW,GAAG,KAAO,GAAG,KAAO,IAAIiB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAI+C,YACrGpB,EAAUC,YACVc,EAAWC,iBACR,CAACxC,EAAG,SAAS,CAACH,EAAIM,GAAG,iBAAiB,IAAI,CAACH,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,UAAU,SAAW,IAAIiB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAI+C,YAC1IpB,EAAUC,YACVc,EAAWC,iBACR,CAAC3C,EAAIM,GAAG,eAAe,IAAI,MAAK,IAAI,IAAI,MAAK,IAAI,QAAON,EAAIiB,KAAoB,kBAAdtC,EAAK+C,KAA0B,CAAuB,YAArB/C,EAAKyC,YAA2B,CAACpB,EAAIM,GAAG,sBAAsBH,EAAG,MAAMH,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAIQ,WAAWwC,QAAQvC,OAAO,MAA4B,WAArB9B,EAAKyC,YAA0B,CAACpB,EAAIM,GAAG,YAAYH,EAAG,MAAMA,EAAG,OAAO,CAACH,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,WAAWyC,sBAAsB,4CAA4CjD,EAAIO,GAAGP,EAAIQ,WAAW0C,uBAAuB,0BAA0B,CAAClD,EAAIM,GAAG,0BAA0BH,EAAG,MAAMA,EAAG,OAAO,CAACH,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,WAAW0C,uBAAuB,4CAA4ClD,EAAIO,GAAGP,EAAIQ,WAAW0C,uBAAuB,2BAA2BlD,EAAIiB,MAAM,QAAO,MAAM,MAAK,IAAIjB,EAAIiB,MAAM,MAAK,IAAI,IAAI,IAAI,GAAGd,EAAG,cAAc,CAACH,EAAIM,GAAG,sBAAsB,IAC50B6C,EAAkB,G,0HChBlB,EAAS,WAAa,IAAInD,EAAI5C,KAAS6C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACb,YAAY,6BAA6B,CAAEU,EAAc,WAAE,CAACG,EAAG,KAAK,CAACH,EAAIM,GAAG,uBAAuBH,EAAG,IAAI,CAACH,EAAIM,GAAG,wEAAyEN,EAAIQ,WAAkB,QAAEL,EAAG,qBAAqB,CAACb,YAAY,oCAAoCe,MAAM,CAAC,KAAO,KAAK,CAACF,EAAG,oBAAoB,CAACb,YAAY,QAAQ,CAACa,EAAG,2BAA2B,CAACA,EAAG,SAAS,CAACH,EAAIM,GAAG,eAAeH,EAAG,4BAA4B,CAACA,EAAG,iBAAiB,CAACb,YAAY,2DAA2D8D,YAAYpD,EAAIqD,GAAG,CAAC,CAACrC,IAAI,UAAUsC,GAAG,WAAW,MAAO,CAACnD,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,qBAAqBH,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,YAAYH,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,qBAAqBH,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACH,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,WAAWwC,QAAQvC,UAAUN,EAAG,KAAK,CAACA,EAAG,OAAO,CAACb,YAAY,oBAAoBE,MAAM,CAAC,SAAYQ,EAAIQ,WAAWwC,QAAQO,sBAAwBvD,EAAIQ,WAAWwC,QAAQQ,iBAAmBxD,EAAIQ,WAAWwC,QAAQO,qBAAuB,IAAI,CAACvD,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,WAAWwC,QAAQO,sBAAwBvD,EAAIQ,WAAWwC,QAAQQ,iBAAmBxD,EAAIQ,WAAWwC,QAAQO,qBAAuB,EAAI,WAAa,oBAAoBpD,EAAG,KAAK,CAACH,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,WAAWwC,QAAQO,sBAAsB,IAAIvD,EAAIO,GAAGP,EAAIQ,WAAWwC,QAAQQ,0BAA0BC,OAAM,IAAO,MAAK,EAAM,eAAe,IAAI,IAAI,GAAGzD,EAAIiB,KAAKjB,EAAIe,GAAIf,EAAa,WAAE,SAAS8B,EAAS4B,GAAQ,OAAOvD,EAAG,qBAAqB,CAACa,IAAI0C,EAAOpE,YAAY,oCAAoCe,MAAM,CAAC,KAAO,KAAK,CAACF,EAAG,oBAAoB,CAACb,YAAY,QAAQ,CAACa,EAAG,2BAA2B,CAACA,EAAG,SAAS,CAACH,EAAIM,GAAGN,EAAIO,GAAGuB,EAASrB,YAAYN,EAAG,4BAA4B,CAACA,EAAG,KAAK,CAACb,YAAY,QAAQ,CAACa,EAAG,SAAS,CAACH,EAAIM,GAAG,mBAAmBH,EAAG,iBAAiB,CAACb,YAAY,2DAA2D8D,YAAYpD,EAAIqD,GAAG,CAAC,CAACrC,IAAI,UAAUsC,GAAG,WAAW,MAAO,CAACnD,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,qBAAqBH,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,YAAYH,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,qBAAqBH,EAAG,QAAQH,EAAIe,GAAIf,EAAIuC,YAAYC,QAAO,SAAUC,GAAK,OAAOA,EAAEV,aAAeD,EAASC,eAAgB,SAASW,GAAY,OAAOvC,EAAG,KAAK,CAACa,IAAI0B,EAAWC,cAAc,CAACxC,EAAG,KAAK,CAACH,EAAIM,GAAGN,EAAIO,GAAGmC,EAAWjC,UAAUN,EAAG,KAAK,CAACA,EAAG,OAAO,CAACb,YAAY,oBAAoBE,MAAM,CAAC,SAAYQ,EAAI2D,qBAAqBC,MAAK,SAAUnB,GAAK,OAAOA,EAAEE,eAAiBD,EAAWC,gBAAiBkB,WAAW,CAAC7D,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAI2D,qBAAqBC,MAAK,SAAUnB,GAAK,OAAOA,EAAEE,eAAiBD,EAAWC,gBAAiBkB,SAAW,WAAa,eAAe,SAAS1D,EAAG,KAAK,CAACH,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAI2D,sBAAwB3D,EAAI2D,qBAAqBC,MAAK,SAAUnB,GAAK,OAAOA,EAAEE,eAAiBD,EAAWC,gBAAiBmB,sBAAwB,GAAG,MAAM9D,EAAIO,GAAGP,EAAI2D,sBAAwB3D,EAAI2D,qBAAqBC,MAAK,SAAUnB,GAAK,OAAOA,EAAEE,eAAiBD,EAAWC,gBAAiBoB,qBAAuB,GAAG,YAAW,KAAKN,OAAM,IAAO,MAAK,KAAQtD,EAAG,KAAK,CAACb,YAAY,QAAQ,CAACa,EAAG,SAAS,CAACH,EAAIM,GAAG,gBAAiBN,EAAIgE,mBAAyB,OAAE7D,EAAG,iBAAiB,CAACb,YAAY,2DAA2D8D,YAAYpD,EAAIqD,GAAG,CAAC,CAACrC,IAAI,UAAUsC,GAAG,WAAW,MAAO,CAACnD,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,kBAAkBH,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,YAAYH,EAAG,KAAK,CAACb,YAAY,aAAa,CAACU,EAAIM,GAAG,iBAAiBH,EAAG,QAAQH,EAAIe,GAAIf,EAAsB,oBAAE,SAASiE,GAAS,OAAO9D,EAAG,KAAK,CAACa,IAAIiD,EAAQC,WAAW,CAAED,EAAa,MAAE,CAAC9D,EAAG,KAAK,CAACH,EAAIM,GAAGN,EAAIO,GAAG0D,EAAQxD,WAAW,CAACN,EAAG,KAAK,CAACA,EAAG,KAAK,CAACH,EAAIM,GAAG,8BAAgC2D,EAAQE,SAA8C,CAAChE,EAAG,KAAK,CAACH,EAAIM,GAAG,gBAArD,CAACH,EAAG,KAAK,CAACH,EAAIM,GAAG,mBAAoDH,EAAG,KAAK,CAACA,EAAG,SAAS,CAACiD,YAAYpD,EAAIqD,GAAG,CAAC,CAACrC,IAAI,YAAYsC,GAAG,SAASc,GACr+H,IAAI9C,EAAK8C,EAAI9C,GACTjB,EAAQ+D,EAAI/D,MAChB,MAAO,CAACF,EAAG,SAASH,EAAIqE,GAAGrE,EAAIsE,GAAG,CAACjE,MAAM,CAAC,MAAQ,UAAU,SAASA,GAAM,GAAOiB,GAAI,CAACtB,EAAIM,GAAG,+BAA+B,MAAK,IAAO,CAACH,EAAG,SAAS,CAACb,YAAY,aAAa,CAACa,EAAG,cAAc,CAACmB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAIuE,oBAAoBzC,EAASC,WAAYkC,EAAQC,cAAc,CAAC/D,EAAG,oBAAoB,CAACH,EAAIM,GAAG,qBAAqB,IAAI,IAAI,IAAI,IAAI,MAAK,KAAKmD,OAAM,IAAO,MAAK,KAAQzD,EAAIiB,KAAKd,EAAG,SAAS,CAACE,MAAM,CAAC,WAAW,IAAI+C,YAAYpD,EAAIqD,GAAG,CAAC,CAACrC,IAAI,YAAYsC,GAAG,SAASc,GAChf,IAAI9C,EAAK8C,EAAI9C,GACTjB,EAAQ+D,EAAI/D,MAChB,MAAO,CAACF,EAAG,QAAQH,EAAIqE,GAAGrE,EAAIsE,GAAG,CAACjE,MAAM,CAAC,SAAW,GAAG,MAAQ,YAAY,QAAQA,GAAM,GAAOiB,GAAI,CAACtB,EAAIM,GAAG,uBAAuB,MAAK,IAAO,CAACH,EAAG,SAAS,CAACA,EAAG,cAAc,CAACmB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAIwE,QAAQC,IAAI,iCAAiC,CAACtE,EAAG,oBAAoB,CAACH,EAAIM,GAAG,iCAAiC,GAAGH,EAAG,cAAc,CAACmB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAI0E,oBAAoB5C,EAASC,eAAe,CAAC5B,EAAG,oBAAoB,CAACH,EAAIM,GAAG,6CAA6C,IAAI,IAAI,IAAI,IAAI,IAAI,OAAM,CAACN,EAAIM,GAAG,qBAAqB,IAC9iB,EAAkB,G,YC8JtB,G,wCAAA,CACErD,KAAM,0BACNI,MAAO,CAAC,cACRW,SAAU,OAAZ,OAAY,CAAZ,gBACI2G,cADJ,WAEM,OAAOC,SAASxH,KAAKoD,WAAWqE,gBAEtC,gBACI,YAAJ,yBACI,WAAJ,wBACI,UAAJ,sBACI,mBAAJ,gCARA,IAUIlB,qBAVJ,WAWM,IADN,EACA,KADA,iBAEA,kBAFA,IAEA,8CACA,KACA,GACA,2BACA,4BACA,8BAIA,2DACA,qDACA,OACA,oNACA,iOACA,6OAGA,wEACA,GACA,gHACA,uHACA,0HAMA,+CACA,2BAEA,MAGA,QACA,4BACA,iDACA,+CACA,mDACA,cAxCA,8BA2CM,OAAOmB,KAGXtG,QAAS,OAAX,OAAW,CAAX,iCACA,gBACI,iBAAJ,iCAEA,gBACI,2BAAJ,wCACI,eAAJ,2BACI,4BAAJ,sCACI,cAAJ,wBACI,cAAJ,2BATA,IAWI,oBAXJ,SAWA,0LAEA,6CAFA,OAEA,EAFA,OAGA,sFAHA,mDAKA,4BALA,4DAQI,oBAnBJ,SAmBA,6KACA,uCADA,OAEA,8HAFA,gDAKE,QAnFF,WAmFA,oLAEA,qBAFA,uBAIA,kCAJA,wBAKA,aALA,gEAKA,EALA,QAOA,KAPA,UAQA,+DARA,kJAUA,8HAVA,qECxPiW,I,iLCQ7VuG,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,EAAiB,QAehC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,kBAAA,KAAgBC,yBAAA,KAAuBC,wBAAA,KAAsBC,mBAAA,KAAiBC,QAAA,KAAMC,QAAA,KAAMC,YAAA,KAAUC,eAAA,OAAeC,QAAA,KAAMC,eAAA,OCoS5J,OACEzI,KAAM,oBACN0I,WAAY,CAAd,2BACE3H,SAAU,OAAZ,OAAY,CAAZ,kBACA,gBACI,WAAJ,wBACI,WAAJ,wBACI,UAAJ,sBACI,YAAJ,4BALA,IAQIqD,iBARJ,WASM,MAAO,CACLuE,OAAQxI,KAAKyI,cACbC,aAAc1I,KAAK2I,mBACnBC,YAAa5I,KAAK6I,oBAItBJ,cAhBJ,WAiBM,MAAO,CACb,CACQ,MAAR,mBACQ,YAAR,sBACQ,YAAR,wBACQ,KAAR,UAEA,CACQ,MAAR,cACQ,YAAR,4BACQ,YAAR,8BACQ,KAAR,UAEA,CACQ,MAAR,aACQ,YAAR,2BACQ,YAAR,6BACQ,KAAR,SAEA,CACQ,MAAR,kBACQ,YAAR,6BACQ,YAAR,uBACQ,KAAR,cAKIE,mBA7CJ,WA8CM,MAAO,CACb,CACQ,MAAR,kBACQ,YAAR,kCACQ,YAAR,yCACQ,KAAR,mBAKIE,kBAxDJ,WAyDM,MAAO,CACb,CACQ,MAAR,mBACQ,YAAR,4BACQ,YAAR,yBACQ,KAAR,mBAMEC,KAAM,WAAR,OACA,SACA,yBAEA,aACA,CACQzF,MAAO,SACPW,YAAa,sCACbD,MAAO,EAAf,SAEA,CACQV,MAAO,eACPW,YACR,oEACQD,MAAO,EAAf,SAEA,CACQV,MAAO,cACPW,YAAa,6BACbD,MAAO,EAAf,UAGA,yBAEE3C,QAAS,OAAX,OAAW,CAAX,kBACA,gBACI,eAAJ,2BACI,eAAJ,2BACI,gBAAJ,4BACI,iBAAJ,iCALA,IAQIgD,WARJ,SAQA,GACMpE,KAAK+I,QAAQC,KAAK,CAAxB,UAEI,qBAXJ,WAWA,wKACA,4CADA,gCAEA,aAFA,8CAIItD,aAfJ,SAeA,KACM,IAAN,4BACA,GAGM,YAGN,KAFA,oCACA,YAAQ,OAAR,wBAII,sBA1BJ,SA0BA,sLAGA,mBACA,0BACA,EACA,IANA,2EASA,4DATA,2DAYI,uBAtCJ,SAsCA,sLAGA,oBACA,0BACA,EACA,gBANA,2EASA,6DATA,2DAYI,YAlDJ,SAkDA,yLAEA,wBACA,EACA,GAJA,cAEA,EAFA,gBAOA,yBACA,EADA,OAEA,QAFA,IAEA,OAFA,EAEA,QATA,UAOA,EAPA,OAaA,KAbA,uBAcA,wDAdA,mBAeA,GAfA,OAmBA,gBACA,yBACA,QACA,wCACA,eACA,sFACA,2FAzBA,+CA8BIR,0BAhFJ,SAgFA,GACM,IAAN,KAIM,OAHN,OAAML,QAAN,cACA,YAAQ,OAAR,kCAEaoE,GAGTrE,aAxFJ,SAwFA,GACM,IAAN,uEACM,OAAN,OAAasE,QAAb,yBAIE,QA7LF,WA6LA,2KACA,4DADA,SAEA,4CAFA,wBAGA,cAHA,gEAGA,EAHA,kBAIA,kBACA,0BACA,cACA,gCAPA,QAIA,EAJA,OASA,wEATA,kJAWA,yBAXA,mEAaEC,iBA1MF,SA0MA,OACI,OAAOC,EAAX,KACA,kEACA,WAEEC,kBA/MF,SA+MA,OACI,OAAOD,EAAX,KACA,kEACA,YCxhB2V,I,4JCQvV,EAAY,eACd,EACArH,EACAgE,GACA,EACA,KACA,WACA,MAIa,eAAiB,QAyBhC,IAAkB,EAAW,CAAC6B,OAAA,KAAK0B,QAAA,KAAMC,QAAA,KAAMC,OAAA,KAAKC,aAAA,KAAWC,WAAA,KAAS7B,kBAAA,KAAgBC,yBAAA,KAAuBC,wBAAA,KAAsBC,mBAAA,KAAiBC,QAAA,KAAM0B,OAAA,KAAKzB,QAAA,KAAMC,YAAA,KAAUyB,kBAAA,KAAgBC,iBAAA,OAAiBC,OAAA,KAAKC,OAAA,KAAKC,WAAA,KAASC,QAAA,KAAMC,aAAA,Q,qBC5C3O7H,EAAOC,QAAU,IAA0B,kC,uBCA3CD,EAAOC,QAAU,IAA0B,yC,kCCA3C,W,sICmBMX,EAAa,eAAO,EAAD,KAEvB,eAAiB,4CAFnB,sBAUe,OAAAA,EAAA,gBAAoC,CACjD9B,KADiD,2BAGjDsC,WAAY,CAAEgI,OAAA,QAEdlK,MAAO,CACLmK,kBADK,QAELC,WAAY,CACV/F,KADU,OAEVgG,QAAS,WAEXC,YANK,QAOLJ,OAAQ,CACN7F,KAAM,CAAC3D,QADD,QAEN2J,SAAS,IAIbxB,KAAM,iBAAO,CACX0B,cAAc,IAGhB5J,SAAU,CACRC,QADQ,WAEN,MAAO,CACL,mCAAoCb,KAD/B,SAEL,sCAAuCA,KAAKwK,eAGhD5I,SAPQ,WAQN,OAAO5B,KAAK6B,eAAZ,UAEF4I,WAVQ,WAWN,OAAOzK,KAAK6B,eAAZ,YAEF6I,WAbQ,WAcN,OAAO1K,KAAK6B,eAAZ,aAIJf,QAxCiD,WAyC/Cd,KAAA,8BAAAA,OAGF8B,cA5CiD,WA6C/C9B,KAAA,mCAGFoB,QAAS,CACPuJ,QADO,SACA,GACL3K,KAAA,kBAEF4K,QAJO,WAKL,IAAMC,EAAO,eAAQ7K,KAAR,YACX,CAACA,KAAK8C,eAAe,EAApB,KAA2B9C,KAD9B,aAGA,OAAOA,KAAK8C,eAAe,EAApB,KAAqC,CAC1C9C,KAAK8C,eAAe,MAAO,CACzBZ,YADyB,iCAEzBE,MAAO,CACL,iDAAkDpC,KAAKoK,mBAEzDjI,WAAY,CAAC,CACXtC,KADW,OAEXqB,OAAQlB,KAAKyK,cARnB,OAeJ1I,OAvEiD,SAuE3C,GAAG,WACP,OAAOC,EAAE,SAAUhC,KAAK8K,mBAAmB9K,KAAxB,MAAoC,CACrDkC,YADqD,2BAErDE,MAAOpC,KAF8C,QAGrDiD,MAAO,CACL8H,SAAU/K,KAAKyK,YAAL,EADL,KAELnG,KAFK,SAGL,gBAAiBtE,KAAK4B,UAExBO,WAAY,CAAC,CACXtC,KADW,SAEXqB,MAAOlB,KAAKmK,SAEdjG,GAAI,iCACClE,KADD,YAAF,IAEAgL,MAAOhL,KAFL,QAGFiL,UAAW,kBAAO,gBAHhB,GAIFC,QAAS,kBAAO,gBAAoB,OAEpC,CACF,eAAQlL,KAAM,UAAW,CAAEmL,KAAMnL,KAAK4B,WADpC,GAEF5B,KAAKuK,aAAevK,KApBtB,gB,kGClFW,sBACb,eAAgB,sCADG,sBAEnB,eAAmB,kBAAkB,IAFxB,OAIN,CACPH,KADO,oBAGPI,MAAO,CACLE,SADK,QAELM,SAAUE,SAGZmI,KARO,WASL,MAAO,CACLsC,QADK,KAELC,OAFK,KAGLC,cAAc,IAIlB1K,SAAU,CACRC,QADQ,WAEN,uBACE,4BAA6Bb,KADxB,SAEL,iCAAkCA,KAF7B,aAGL,8BAA+BA,KAH1B,YAIFA,KAAKuL,eAGZd,WATQ,WAUN,OAAOzK,KAAKD,gBAAgBI,UAAYH,KAAxC,UAEF0K,WAZQ,WAaN,OAAO1K,KAAKD,gBAAgBU,UAAYT,KAAxC,WAIJoB,QAAS,CACPoK,gBADO,SACQ,GACbxL,KAAA,WAEFyL,kBAJO,WAKLzL,KAAA,cAEF0L,eAPO,SAOO,GACZ1L,KAAA,SACA2L,EAAA,YAAgB3L,KAAhB,UAEF4L,iBAXO,WAYL5L,KAAA,aAEF2K,QAdO,SAcA,GACDkB,EAAJ,QAAc7L,KAAKqL,OAAL,WAEdrL,KAAA,iBAEAA,KAAA,YAAmBA,KAAnB,YAAsCA,KAAtC,UAEF8L,OArBO,WAqBD,WAEA9L,KAAJ,UAAkBA,KAAKoL,QAAQW,UAAW,GAC1C/L,KAAA,WAAe,kBAAM,QAArB,eAIJ+B,OA7DO,SA6DD,GACJ,OAAOC,EAAE,MAAO,CACdE,YADc,oBAEdE,MAAOpC,KAFO,QAGdiD,MAAO,CACL,gBAAiB+I,OAAOhM,KAAD,YAExB,eANH,W,kCCrFJ,W,qBCAAqC,EAAOC,QAAU,IAA0B,mC,qBCA3CD,EAAOC,QAAU,IAA0B","file":"js/chunk-439a5390.24f7bc1d.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","module.exports = __webpack_public_path__ + \"img/assignments_summary.eabbe194.svg\";","module.exports = __webpack_public_path__ + \"img/all_conditions.c4f6b74f.svg\";","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.experiment)?_c('v-container',[_c('v-row',{staticClass:\"my-1\",attrs:{\"justify\":\"space-between\"}},[_c('v-col',{attrs:{\"cols\":\"8\"}},[_c('p',{staticClass:\"header ma-0 pa-0\"},[_c('v-img',{staticClass:\"mr-6\",attrs:{\"src\":require(\"@/assets/terracotta_logo_mark.svg\"),\"alt\":\"Terracotta Logo\",\"max-height\":\"30\",\"max-width\":\"27\"}}),_c('span',[_vm._v(_vm._s(_vm.experiment.title))])],1)])],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-divider'),_c('v-tabs',{attrs:{\"elevation\":\"0\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((_vm.items),function(item){return _c('v-tab',{key:item},[_vm._v(\" \"+_vm._s(item)+\" \")])}),1),_c('v-divider',{staticClass:\"mb-6\"}),_c('v-tabs-items',{model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((_vm.items),function(item){return _c('v-tab-item',{key:item,staticClass:\"py-3\"},[(item === 'status')?[_c('experiment-summary-status',{attrs:{\"experiment\":_vm.experiment}})]:_vm._e(),(item === 'setup')?[_c('v-card',{staticClass:\"pt-5 px-5 mx-auto blue lighten-5 rounded-lg\",attrs:{\"outlined\":\"\"}},[_c('p',{staticClass:\"pb-0\"},[_c('strong',[_vm._v(\"Note:\")]),_vm._v(\" You are currently collecting assignment submissions. Some setup functionality may be disabled to not disrupt the experiment. \")])]),_c('v-expansion-panels',{staticClass:\"mt-5 v-expansion-panels--icon\",attrs:{\"flat\":\"\"}},_vm._l((_vm.setupPanels),function(panel){return _c('v-expansion-panel',{key:panel.title},[_c('v-expansion-panel-header',[_c('div',{staticClass:\"panel-overview\"},[_c('div',{staticClass:\"a1\"},[_c('v-img',{staticClass:\"mr-6\",attrs:{\"src\":panel.image,\"alt\":panel.title,\"min-height\":\"55\",\"min-width\":\"50\"}})],1),_c('div',{staticClass:\"panelInformation\"},[_c('h2',[_vm._v(_vm._s(panel.title))]),_c('span',[_vm._v(_vm._s(panel.description))])])])]),_c('v-expansion-panel-content',[_c('table',_vm._l((_vm.sectionValuesMap[panel.title]),function(item){return _c('tr',{key:item.title,staticClass:\"tableRow\"},[_c('td',{staticClass:\"leftData col-4\"},[[_c('div',{staticClass:\"detail\"},[_c('span',{staticClass:\"heading\"},[_vm._v(_vm._s(item.title))]),_c('a',{on:{\"click\":function($event){return _vm.handleEdit(item.editSection)}}},[_vm._v(\"EDIT\")])])]],2),_c('td',{staticClass:\"col-7 rightData\"},[(item.type === 'string')?[_vm._v(\" \"+_vm._s(item.description)+\" \")]:_vm._e(),(item.type === 'array')?_vm._l((item.description),function(condition,index){return _c('label',{key:condition.conditionId,staticClass:\"text-left conditionLabel\",attrs:{\"for\":(\"condition-\" + (condition.conditionId))}},[_c('span',{staticClass:\"conditionName\"},[_vm._v(\"Condition \"+_vm._s(index + 1))]),_c('br'),_c('span',[_vm._v(_vm._s(condition.name))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(condition.defaultCondition),expression:\"condition.defaultCondition\"}],staticClass:\"rounded-pill px-3 py-1 primary ml-3 defaultPill\"},[_c('v-icon',[_vm._v(\"mdi-check\")]),_c('span',[_vm._v(\"Default\")])],1)])}):_vm._e(),(item.type === 'constant')?[(item.description === 'WITHIN')?[_c('img',{staticClass:\"constantImage mb-2\",attrs:{\"src\":require(\"@/assets/all_conditions.svg\"),\"alt\":\"all conditions\"}}),_c('span',{staticClass:\"conditionType mb-2\"},[_vm._v(\"All conditions\")]),_c('p',{staticClass:\"conditionDetail\"},[_vm._v(\" All students are exposed to every condition, in different orders. This way you can compare how the different conditions affected each individual student. This is called a within-subject design. \")])]:_vm._e(),(item.description === 'BETWEEN')?[_c('img',{staticClass:\"constantImage mb-2\",attrs:{\"src\":require(\"@/assets/one_condition.svg\"),\"alt\":\"one conditions\"}}),_c('span',{staticClass:\"conditionType mb-2\"},[_vm._v(\"Only one condition\")]),_c('p',{staticClass:\"conditionDetail\"},[_vm._v(\" Each student is only exposed to one condition, so that you can compare how the different conditions affected different students. This is called a between-subjects design. \")])]:_vm._e()]:_vm._e(),(item.type === 'assignments')?[_vm._l((_vm.exposures),function(exposure,index){return [_c('div',{key:exposure.exposureId,staticClass:\"assignmentExpansion\"},[_c('span',{staticClass:\"exposureSetName\"},[_vm._v(\" Exposure Set \"+_vm._s(index + 1)+\" \")]),_c('br'),_vm._l((_vm.sortedGroups(\n                                    exposure.groupConditionList\n                                  )),function(group){return _c('div',{key:group.groupId,staticClass:\"groupNames\"},[_vm._v(\" \"+_vm._s(group)+\" will receive \"),_c('v-chip',{key:group.groupName + group.conditionName,staticClass:\"ma-2\",attrs:{\"color\":\"primary\",\"label\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.groupNameConditionMapping( exposure.groupConditionList )[group]))])],1)}),_c('v-expansion-panels',{staticClass:\"v-expansion-panels--outlined\",attrs:{\"flat\":\"\"}},_vm._l((_vm.assignments.filter(\n                                      function (a) { return a.exposureId === exposure.exposureId; }\n                                    )),function(assignment){return _c('v-expansion-panel',{key:assignment.assignmentId},[_c('v-expansion-panel-header',[_vm._v(\" \"+_vm._s(assignment.title)+\" (\"+_vm._s((assignment.treatments && assignment.treatments.length) || 0)+\"/\"+_vm._s(_vm.conditions.length || 0)+\") \")]),_c('v-expansion-panel-content',[_c('v-list',{staticClass:\"pa-0\"},_vm._l((_vm.conditions),function(condition){return _c('v-list-item',{key:condition.conditionId,staticClass:\"justify-center px-0\"},[_c('v-list-item-content',[_c('p',{staticClass:\"ma-0 pa-0 assignmentConditionName\"},[_vm._v(\" \"+_vm._s(condition.name)+\" \")])]),_c('v-list-item-action',[(\n                                                _vm.hasTreatment(\n                                                  condition.conditionId,\n                                                  assignment.assignmentId\n                                                )\n                                              )?[_c('v-btn',{attrs:{\"icon\":\"\",\"outlined\":\"\",\"text\":\"\",\"tile\":\"\"},on:{\"click\":function($event){return _vm.goToBuilder(\n                                                    condition.conditionId,\n                                                    assignment.assignmentId\n                                                  )}}},[_c('v-icon',[_vm._v(\"mdi-pencil\")])],1)]:[_c('v-btn',{attrs:{\"color\":\"primary\",\"outlined\":\"\"},on:{\"click\":function($event){return _vm.goToBuilder(\n                                                    condition.conditionId,\n                                                    assignment.assignmentId\n                                                  )}}},[_vm._v(\"Select \")])]],2)],1)}),1)],1)],1)}),1)],2)]})]:_vm._e(),(item.type === 'participation')?[(item.description === 'CONSENT')?[_vm._v(\" Informed Consent \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.experiment.consent.title)+\" \")]:(item.description === 'MANUAL')?[_vm._v(\" Manual \"),_c('br'),_c('span',[_vm._v(_vm._s(_vm.experiment.acceptedParticipants)+\" students selected to participate out of \"+_vm._s(_vm.experiment.potentialParticipants)+\" students enrolled \")])]:[_vm._v(\" Include All Students \"),_c('br'),_c('span',[_vm._v(_vm._s(_vm.experiment.potentialParticipants)+\" students selected to participate out of \"+_vm._s(_vm.experiment.potentialParticipants)+\" students enrolled \")])]]:_vm._e()],2)])}),0)])],1)}),1)]:_vm._e()],2)}),1)],1)],1)],1):_c('v-container',[_vm._v(\" no experiment \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"experiment-summary-status\"},[(_vm.experiment)?[_c('h1',[_vm._v(\"Experiment Status\")]),_c('p',[_vm._v(\"Once your experiment is running, you will see status updates below\")]),(_vm.experiment.consent)?_c('v-expansion-panels',{staticClass:\"v-expansion-panels--outlined mb-7\",attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\"Consent\")])]),_c('v-expansion-panel-content',[_c('v-simple-table',{staticClass:\"mb-9 v-data-table--no-outline v-data-table--light-header\",scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('thead',[_c('tr',[_c('th',{staticClass:\"text-left\"},[_vm._v(\"Assignment Name\")]),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Status\")]),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Submissions\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(_vm._s(_vm.experiment.consent.title))]),_c('td',[_c('span',{staticClass:\"completion-status\",class:{'complete': _vm.experiment.consent.answeredConsentCount >= _vm.experiment.consent.expectedConsent && _vm.experiment.consent.answeredConsentCount > 0}},[_vm._v(_vm._s(_vm.experiment.consent.answeredConsentCount >= _vm.experiment.consent.expectedConsent && _vm.experiment.consent.answeredConsentCount > 0 ? 'Complete' : 'In Progress'))])]),_c('td',[_vm._v(_vm._s(_vm.experiment.consent.answeredConsentCount)+\"/\"+_vm._s(_vm.experiment.consent.expectedConsent))])])])]},proxy:true}],null,false,2022742315)})],1)],1)],1):_vm._e(),_vm._l((_vm.exposures),function(exposure,eIndex){return _c('v-expansion-panels',{key:eIndex,staticClass:\"v-expansion-panels--outlined mb-7\",attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(_vm._s(exposure.title))])]),_c('v-expansion-panel-content',[_c('h4',{staticClass:\"mb-3\"},[_c('strong',[_vm._v(\"Assignments\")])]),_c('v-simple-table',{staticClass:\"mb-9 v-data-table--no-outline v-data-table--light-header\",scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('thead',[_c('tr',[_c('th',{staticClass:\"text-left\"},[_vm._v(\"Assignment Name\")]),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Status\")]),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Submissions\")])])]),_c('tbody',_vm._l((_vm.assignments.filter(function (a) { return a.exposureId === exposure.exposureId; })),function(assignment){return _c('tr',{key:assignment.assignmentId},[_c('td',[_vm._v(_vm._s(assignment.title))]),_c('td',[_c('span',{staticClass:\"completion-status\",class:{'complete': _vm.assignmentCompletion.find(function (a) { return a.assignmentId === assignment.assignmentId; }).complete}},[_vm._v(\" \"+_vm._s(_vm.assignmentCompletion.find(function (a) { return a.assignmentId === assignment.assignmentId; }).complete ? 'Complete' : 'In Progress')+\" \")])]),_c('td',[_vm._v(\" \"+_vm._s(_vm.assignmentCompletion && _vm.assignmentCompletion.find(function (a) { return a.assignmentId === assignment.assignmentId; }).submissionsCompleted || 0)+\" / \"+_vm._s(_vm.assignmentCompletion && _vm.assignmentCompletion.find(function (a) { return a.assignmentId === assignment.assignmentId; }).submissionsExpected || 0)+\" \")])])}),0)]},proxy:true}],null,true)}),_c('h4',{staticClass:\"mb-3\"},[_c('strong',[_vm._v(\"Outcomes\")])]),(_vm.experimentOutcomes.length)?_c('v-simple-table',{staticClass:\"mb-9 v-data-table--no-outline v-data-table--light-header\",scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('thead',[_c('tr',[_c('th',{staticClass:\"text-left\"},[_vm._v(\"Outcome Name\")]),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Source\")]),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Actions\")])])]),_c('tbody',_vm._l((_vm.experimentOutcomes),function(outcome){return _c('tr',{key:outcome.outcomeId},[(outcome.title)?[_c('td',[_vm._v(_vm._s(outcome.title))])]:[_c('td',[_c('em',[_vm._v(\"Outcome with no title\")])])],(!outcome.external)?[_c('td',[_vm._v(\"Manual Entry\")])]:[_c('td',[_vm._v(\"Gradebook\")])],_c('td',[_c('v-menu',{scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-icon',_vm._g(_vm._b({attrs:{\"color\":\"black\"}},'v-icon',attrs,false),on),[_vm._v(\" mdi-dots-horizontal \")])]}}],null,true)},[_c('v-list',{staticClass:\"text-left\"},[_c('v-list-item',{on:{\"click\":function($event){return _vm.handleDeleteOutcome(exposure.exposureId, outcome.outcomeId)}}},[_c('v-list-item-title',[_vm._v(\"Delete Outcome\")])],1)],1)],1)],1)],2)}),0)]},proxy:true}],null,true)}):_vm._e(),_c('v-menu',{attrs:{\"offset-y\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({attrs:{\"outlined\":\"\",\"color\":\"primary\"}},'v-btn',attrs,false),on),[_vm._v(\" Add Outcome \")])]}}],null,true)},[_c('v-list',[_c('v-list-item',{on:{\"click\":function($event){return _vm.console.log('Select item from gradebook')}}},[_c('v-list-item-title',[_vm._v(\"Select item from gradebook\")])],1),_c('v-list-item',{on:{\"click\":function($event){return _vm.handleCreateOutcome(exposure.exposureId)}}},[_c('v-list-item-title',[_vm._v(\"Manually enter scores for each student\")])],1)],1)],1)],1)],1)],1)})]:[_vm._v(\" no experiment \")]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"experiment-summary-status\" >\r\n    <template v-if=\"experiment\">\r\n      <h1>Experiment Status</h1>\r\n      <p>Once your experiment is running, you will see status updates below</p>\r\n\r\n      <v-expansion-panels v-if=\"experiment.consent\" class=\"v-expansion-panels--outlined mb-7\" flat>\r\n        <v-expansion-panel class=\"py-3\">\r\n          <v-expansion-panel-header>\r\n            <strong>Consent</strong>\r\n          </v-expansion-panel-header>\r\n          <v-expansion-panel-content>\r\n            <v-simple-table class=\"mb-9 v-data-table--no-outline v-data-table--light-header\">\r\n              <template v-slot:default>\r\n                <thead>\r\n                <tr>\r\n                  <th class=\"text-left\">Assignment Name</th>\r\n                  <th class=\"text-left\">Status</th>\r\n                  <th class=\"text-left\">Submissions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                  <td>{{ experiment.consent.title }}</td>\r\n                  <td><span class=\"completion-status\" :class=\"{'complete': experiment.consent.answeredConsentCount >= experiment.consent.expectedConsent && experiment.consent.answeredConsentCount > 0}\">{{\r\n                      experiment.consent.answeredConsentCount >= experiment.consent.expectedConsent &&\r\n                      experiment.consent.answeredConsentCount > 0 ?\r\n                        'Complete' : 'In Progress'\r\n                    }}</span></td>\r\n                  <td>{{ experiment.consent.answeredConsentCount }}/{{ experiment.consent.expectedConsent }}</td>\r\n                </tr>\r\n                </tbody>\r\n              </template>\r\n            </v-simple-table>\r\n          </v-expansion-panel-content>\r\n        </v-expansion-panel>\r\n      </v-expansion-panels>\r\n\r\n      <v-expansion-panels class=\"v-expansion-panels--outlined mb-7\"\r\n                          v-for=\"(exposure, eIndex) in exposures\"\r\n                          :key=\"eIndex\"\r\n                          flat>\r\n        <v-expansion-panel class=\"py-3\">\r\n          <v-expansion-panel-header>\r\n            <strong>{{ exposure.title }}</strong>\r\n          </v-expansion-panel-header>\r\n          <v-expansion-panel-content>\r\n            <h4 class=\"mb-3\"><strong>Assignments</strong></h4>\r\n            <v-simple-table class=\"mb-9 v-data-table--no-outline v-data-table--light-header\">\r\n              <template v-slot:default>\r\n                <thead>\r\n                <tr>\r\n                  <th class=\"text-left\">Assignment Name</th>\r\n                  <th class=\"text-left\">Status</th>\r\n                  <th class=\"text-left\">Submissions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr\r\n                  v-for=\"assignment in assignments.filter(a => a.exposureId === exposure.exposureId)\"\r\n                  :key=\"assignment.assignmentId\"\r\n                >\r\n                  <td>{{ assignment.title }}</td>\r\n                  <td><span class=\"completion-status\" :class=\"{'complete': assignmentCompletion.find(a => a.assignmentId === assignment.assignmentId).complete}\">\r\n                    {{\r\n                      assignmentCompletion.find(a => a.assignmentId === assignment.assignmentId).complete ?\r\n                        'Complete' : 'In Progress'\r\n                    }}\r\n                  </span></td>\r\n                  <td>\r\n                    {{ assignmentCompletion && assignmentCompletion.find(a => a.assignmentId === assignment.assignmentId).submissionsCompleted || 0 }}\r\n                    /\r\n                    {{ assignmentCompletion && assignmentCompletion.find(a => a.assignmentId === assignment.assignmentId).submissionsExpected || 0 }}\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </template>\r\n            </v-simple-table>\r\n\r\n            <h4 class=\"mb-3\"><strong>Outcomes</strong></h4>\r\n            <v-simple-table class=\"mb-9 v-data-table--no-outline v-data-table--light-header\" v-if=\"experimentOutcomes.length\">\r\n              <template v-slot:default>\r\n                <thead>\r\n                <tr>\r\n                  <th class=\"text-left\">Outcome Name</th>\r\n                  <th class=\"text-left\">Source</th>\r\n                  <th class=\"text-left\">Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr\r\n                  v-for=\"outcome in experimentOutcomes\"\r\n                  :key=\"outcome.outcomeId\"\r\n                >\r\n                  <template v-if=\"outcome.title\">\r\n                    <td>{{outcome.title}}</td>\r\n                  </template>\r\n                  <template v-else>\r\n                    <td><em>Outcome with no title</em></td>\r\n                  </template>\r\n\r\n                  <template v-if=\"!outcome.external\">\r\n                    <td>Manual Entry</td>\r\n                  </template>\r\n                  <template v-else>\r\n                    <td>Gradebook</td>\r\n                  </template>\r\n\r\n                  <td>\r\n                    <v-menu>\r\n                      <template v-slot:activator=\"{ on, attrs }\">\r\n                        <v-icon\r\n                          color=\"black\"\r\n                          v-bind=\"attrs\"\r\n                          v-on=\"on\"\r\n                        >\r\n                          mdi-dots-horizontal\r\n                        </v-icon>\r\n                      </template>\r\n                      <v-list class=\"text-left\">\r\n                        <v-list-item @click=\"handleDeleteOutcome(exposure.exposureId, outcome.outcomeId)\">\r\n                          <v-list-item-title>Delete Outcome</v-list-item-title>\r\n                        </v-list-item>\r\n                      </v-list>\r\n                    </v-menu>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </template>\r\n            </v-simple-table>\r\n\r\n\r\n            <v-menu offset-y>\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn\r\n                  outlined\r\n                  color=\"primary\"\r\n                  v-bind=\"attrs\"\r\n                  v-on=\"on\"\r\n                >\r\n                  Add Outcome\r\n                </v-btn>\r\n              </template>\r\n              <v-list>\r\n                <v-list-item @click=\"console.log('Select item from gradebook')\">\r\n                  <v-list-item-title>Select item from gradebook</v-list-item-title>\r\n                </v-list-item>\r\n                <v-list-item @click=\"handleCreateOutcome(exposure.exposureId)\">\r\n                  <v-list-item-title>Manually enter scores for each student</v-list-item-title>\r\n                </v-list-item>\r\n              </v-list>\r\n            </v-menu>\r\n          </v-expansion-panel-content>\r\n        </v-expansion-panel>\r\n      </v-expansion-panels>\r\n    </template>\r\n    <template v-else>\r\n      no experiment\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters, mapMutations} from \"vuex\";\r\n\r\nexport default {\r\n  name: 'ExperimentSummaryStatus',\r\n  props: ['experiment'],\r\n  computed: {\r\n    experiment_id() {\r\n      return parseInt(this.experiment.experimentId)\r\n    },\r\n    ...mapGetters({\r\n      assignments: 'assignment/assignments',\r\n      conditions: 'experiment/conditions',\r\n      exposures: 'exposures/exposures',\r\n      experimentOutcomes: 'outcome/experimentOutcomes'\r\n    }),\r\n    assignmentCompletion() {\r\n      let arr = []\r\n      for (const assignment of this.assignments) {\r\n        let complete = false\r\n        let counts = {\r\n          submissionsExpectedCount: 0,\r\n          submissionsCompletedCount: 0,\r\n          submissionsInProgressCount: 0\r\n        }\r\n\r\n        // add assessment submission counts for each assignment\r\n        if (assignment.treatments?.length > 1) {\r\n          counts = assignment.treatments.reduce((prev, cur)=> {\r\n            return {\r\n              submissionsExpectedCount: prev?.assessmentDto?.submissionsExpected+cur?.assessmentDto?.submissionsExpected || 0,\r\n              submissionsCompletedCount: prev?.assessmentDto?.submissionsCompletedCount+cur?.assessmentDto?.submissionsCompletedCount || 0,\r\n              submissionsInProgressCount: prev?.assessmentDto?.submissionsInProgressCount+cur?.assessmentDto?.submissionsInProgressCount || 0\r\n            }\r\n          })\r\n        } else if (assignment.treatments?.length === 1) {\r\n          counts = {\r\n            submissionsExpectedCount: assignment.treatments[0].assessmentDto?.submissionsExpected || 0,\r\n            submissionsCompletedCount: assignment.treatments[0].assessmentDto?.submissionsCompletedCount || 0,\r\n            submissionsInProgressCount: assignment.treatments[0].assessmentDto?.submissionsInProgressCount || 0\r\n          }\r\n        }\r\n\r\n        // check if assignment is complete based on completed vs expected submissions\r\n        if (\r\n          counts.submissionsCompleted >= counts.submissionsExpected &&\r\n          counts.submissionsCompleted > 0\r\n        ) {\r\n          complete = true\r\n        }\r\n\r\n        arr.push({\r\n          assignmentId: assignment.assignmentId,\r\n          submissionsCompleted: counts.submissionsCompletedCount,\r\n          submissionsExpected: counts.submissionsExpectedCount,\r\n          submissionsInProgress: counts.submissionsInProgressCount,\r\n          complete: complete\r\n        })\r\n      }\r\n      return arr\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      resetAssignments: 'assignment/resetAssignments',\r\n    }),\r\n    ...mapActions({\r\n      fetchAssignmentsByExposure: 'assignment/fetchAssignmentsByExposure',\r\n      fetchExposures: 'exposures/fetchExposures',\r\n      fetchOutcomesByExperimentId: 'outcome/fetchOutcomesByExperimentId',\r\n      createOutcome: 'outcome/createOutcome',\r\n      deleteOutcome: 'outcome/deleteOutcome'\r\n    }),\r\n    async handleCreateOutcome(exposure_id) {\r\n      try {\r\n        const outcome = await this.createOutcome([this.experiment_id, exposure_id, '', 0, false])\r\n        this.$router.push({name:'OutcomeScoring', params: {exposure_id, outcome_id: outcome.outcomeId}})\r\n      } catch(error) {\r\n        console.error({error})\r\n      }\r\n    },\r\n    async handleDeleteOutcome(exposure_id, outcome_id) {\r\n      await this.deleteOutcome([this.experiment_id, exposure_id, outcome_id])\r\n      this.fetchOutcomesByExperimentId([this.experiment_id, [...new Set(this.exposures.map(item => item.exposureId))]])\r\n    }\r\n  },\r\n  async created() {\r\n    // reset assignments to get a clean list\r\n    await this.resetAssignments()\r\n    // update assignments on load\r\n    await this.fetchExposures(this.experiment_id)\r\n    for (const e of this.exposures) {\r\n      // add submissions to assignments request\r\n      const submissions = true\r\n      await this.fetchAssignmentsByExposure([this.experiment_id, e.exposureId, submissions])\r\n    }\r\n    this.fetchOutcomesByExperimentId([this.experiment_id, [...new Set(this.exposures.map(item => item.exposureId))]])\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .completion-status {\r\n    &::before {\r\n      content: \"\";\r\n      display: inline-block;\r\n      background: #FFE0B2;\r\n      height: 11px;\r\n      width: 11px;\r\n      margin-right: 8px;\r\n      border-radius: 999px;\r\n    }\r\n\r\n    &.complete {\r\n      &::before {\r\n        background: #38ADB6;\r\n      }\r\n    }\r\n  }\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentSummaryStatus.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentSummaryStatus.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExperimentSummaryStatus.vue?vue&type=template&id=33a56168&scoped=true&\"\nimport script from \"./ExperimentSummaryStatus.vue?vue&type=script&lang=js&\"\nexport * from \"./ExperimentSummaryStatus.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ExperimentSummaryStatus.vue?vue&type=style&index=0&id=33a56168&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"33a56168\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VSimpleTable } from 'vuetify/lib/components/VDataTable';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon,VList,VListItem,VListItemTitle,VMenu,VSimpleTable})\n","<template>\r\n  <div>\r\n    <v-container v-if=\"experiment\">\r\n      <v-row class=\"my-1\" justify=\"space-between\">\r\n        <v-col cols=\"8\">\r\n          <p class=\"header ma-0 pa-0\">\r\n            <v-img\r\n              src=\"@/assets/terracotta_logo_mark.svg\"\r\n              class=\"mr-6\"\r\n              alt=\"Terracotta Logo\"\r\n              max-height=\"30\"\r\n              max-width=\"27\"\r\n            />\r\n            <span>{{ experiment.title }}</span>\r\n          </p>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row>\r\n        <v-col cols=\"12\">\r\n          <v-divider></v-divider>\r\n          <v-tabs v-model=\"tab\" elevation=\"0\">\r\n            <v-tab v-for=\"item in items\" :key=\"item\">\r\n              {{ item }}\r\n            </v-tab>\r\n          </v-tabs>\r\n          <v-divider class=\"mb-6\"></v-divider>\r\n          <v-tabs-items v-model=\"tab\">\r\n            <v-tab-item class=\"py-3\" v-for=\"item in items\" :key=\"item\">\r\n              <!-- Status Panel -->\r\n              <template v-if=\"item === 'status'\">\r\n                <experiment-summary-status :experiment=\"experiment\" />\r\n              </template>\r\n              <!-- Setup Panel -->\r\n              <template v-if=\"item === 'setup'\">\r\n                <v-card\r\n                  class=\"pt-5 px-5 mx-auto blue lighten-5 rounded-lg\"\r\n                  outlined\r\n                >\r\n                  <p class=\"pb-0\">\r\n                    <strong>Note:</strong> You are currently collecting\r\n                    assignment submissions. Some setup functionality may be\r\n                    disabled to not disrupt the experiment.\r\n                  </p>\r\n                </v-card>\r\n                <!-- Design, Participants and Assignment Panels -->\r\n                <v-expansion-panels class=\"mt-5 v-expansion-panels--icon\" flat>\r\n                  <v-expansion-panel\r\n                    v-for=\"panel in setupPanels\"\r\n                    :key=\"panel.title\"\r\n                  >\r\n                    <v-expansion-panel-header>\r\n                      <div class=\"panel-overview\">\r\n                        <div class=\"a1\">\r\n                          <v-img\r\n                            :src=\"panel.image\"\r\n                            class=\"mr-6\"\r\n                            :alt=\"panel.title\"\r\n                            min-height=\"55\"\r\n                            min-width=\"50\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"panelInformation\">\r\n                          <h2>{{ panel.title }}</h2>\r\n                          <span>{{ panel.description }}</span>\r\n                        </div>\r\n                      </div>\r\n                    </v-expansion-panel-header>\r\n                    <v-expansion-panel-content>\r\n                      <table>\r\n                        <tr\r\n                          v-for=\"item in sectionValuesMap[panel.title]\"\r\n                          :key=\"item.title\"\r\n                          class=\"tableRow\"\r\n                        >\r\n                          <td class=\"leftData col-4\">\r\n                            <template>\r\n                              <div class=\"detail\">\r\n                                <span class=\"heading\">{{ item.title }}</span>\r\n                                <a @click=\"handleEdit(item.editSection)\"\r\n                                  >EDIT</a\r\n                                >\r\n                              </div>\r\n                            </template>\r\n                          </td>\r\n                          <td class=\"col-7 rightData\">\r\n                            <!-- String Data -->\r\n                            <!-- For Experiment Title and Description -->\r\n                            <template v-if=\"item.type === 'string'\">\r\n                              {{ item.description }}\r\n                            </template>\r\n                            <!-- Array data -->\r\n                            <!-- For Experiment Condition Details -->\r\n                            <template\r\n                              v-if=\"item.type === 'array'\"\r\n                              class=\"arrayData\"\r\n                            >\r\n                              <label\r\n                                v-for=\"(condition, index) in item.description\"\r\n                                :key=\"condition.conditionId\"\r\n                                :for=\"`condition-${condition.conditionId}`\"\r\n                                class=\"text-left conditionLabel\"\r\n                              >\r\n                                <span class=\"conditionName\"\r\n                                  >Condition {{ index + 1 }}</span\r\n                                >\r\n                                <br />\r\n                                <span>{{ condition.name }}</span>\r\n                                <span\r\n                                  class=\"rounded-pill px-3 py-1 primary ml-3 defaultPill\"\r\n                                  v-show=\"condition.defaultCondition\"\r\n                                >\r\n                                  <v-icon>mdi-check</v-icon>\r\n                                  <span>Default</span>\r\n                                </span>\r\n                              </label>\r\n                            </template>\r\n                            <!-- Constant values -->\r\n                            <!-- For Experiment Type -->\r\n                            <template v-if=\"item.type === 'constant'\">\r\n                              <template v-if=\"item.description === 'WITHIN'\">\r\n                                <img\r\n                                  src=\"@/assets/all_conditions.svg\"\r\n                                  alt=\"all conditions\"\r\n                                  class=\"constantImage mb-2\"\r\n                                />\r\n                                <span class=\"conditionType mb-2\"\r\n                                  >All conditions</span\r\n                                >\r\n                                <p class=\"conditionDetail\">\r\n                                  All students are exposed to every condition,\r\n                                  in different orders. This way you can compare\r\n                                  how the different conditions affected each\r\n                                  individual student. This is called a\r\n                                  within-subject design.\r\n                                </p>\r\n                              </template>\r\n                              <template v-if=\"item.description === 'BETWEEN'\">\r\n                                <img\r\n                                  src=\"@/assets/one_condition.svg\"\r\n                                  alt=\"one conditions\"\r\n                                  class=\"constantImage mb-2\"\r\n                                />\r\n                                <span class=\"conditionType mb-2\"\r\n                                  >Only one condition</span\r\n                                >\r\n                                <p class=\"conditionDetail\">\r\n                                  Each student is only exposed to one condition,\r\n                                  so that you can compare how the different\r\n                                  conditions affected different students. This\r\n                                  is called a between-subjects design.\r\n                                </p>\r\n                              </template>\r\n                            </template>\r\n                            <!-- Assignment data -->\r\n                            <template v-if=\"item.type === 'assignments'\">\r\n                              <template v-for=\"(exposure, index) in exposures\">\r\n                                <div\r\n                                  :key=\"exposure.exposureId\"\r\n                                  class=\"assignmentExpansion\"\r\n                                >\r\n                                  <span class=\"exposureSetName\">\r\n                                    Exposure Set {{ index + 1 }}\r\n                                  </span>\r\n                                  <br />\r\n                                  <div\r\n                                    class=\"groupNames\"\r\n                                    :key=\"group.groupId\"\r\n                                    v-for=\"group in sortedGroups(\r\n                                      exposure.groupConditionList\r\n                                    )\"\r\n                                  >\r\n                                    {{ group }} will receive\r\n                                    <v-chip\r\n                                      class=\"ma-2\"\r\n                                      color=\"primary\"\r\n                                      label\r\n                                      :key=\"\r\n                                        group.groupName + group.conditionName\r\n                                      \"\r\n                                    >\r\n                                    <!-- Sorted Group Names -->\r\n                                      {{\r\n                                        groupNameConditionMapping(\r\n                                          exposure.groupConditionList\r\n                                        )[group]\r\n                                      }}</v-chip\r\n                                    >\r\n                                  </div>\r\n                                  <!-- Assignment Expansion Panels -->\r\n                                  <v-expansion-panels\r\n                                    class=\"v-expansion-panels--outlined\"\r\n                                    flat\r\n                                  >\r\n                                    <v-expansion-panel\r\n                                      v-for=\"assignment in assignments.filter(\r\n                                        (a) =>\r\n                                          a.exposureId === exposure.exposureId\r\n                                      )\"\r\n                                      :key=\"assignment.assignmentId\"\r\n                                    >\r\n                                      <v-expansion-panel-header>\r\n                                        {{ assignment.title }} ({{\r\n                                          (assignment.treatments &&\r\n                                            assignment.treatments.length) ||\r\n                                            0\r\n                                        }}/{{ conditions.length || 0 }})\r\n                                      </v-expansion-panel-header>\r\n                                      <v-expansion-panel-content>\r\n                                        <v-list class=\"pa-0\">\r\n                                          <v-list-item\r\n                                            class=\"justify-center px-0\"\r\n                                            v-for=\"condition in conditions\"\r\n                                            :key=\"condition.conditionId\"\r\n                                          >\r\n                                            <v-list-item-content>\r\n                                              <p\r\n                                                class=\"ma-0 pa-0 assignmentConditionName\"\r\n                                              >\r\n                                                {{ condition.name }}\r\n                                              </p>\r\n                                            </v-list-item-content>\r\n\r\n                                            <v-list-item-action>\r\n                                              <!-- Assignment Edit Button -->\r\n                                              <template\r\n                                                v-if=\"\r\n                                                  hasTreatment(\r\n                                                    condition.conditionId,\r\n                                                    assignment.assignmentId\r\n                                                  )\r\n                                                \"\r\n                                              >\r\n                                                <v-btn\r\n                                                  icon\r\n                                                  outlined\r\n                                                  text\r\n                                                  tile\r\n                                                  @click=\"\r\n                                                    goToBuilder(\r\n                                                      condition.conditionId,\r\n                                                      assignment.assignmentId\r\n                                                    )\r\n                                                  \"\r\n                                                >\r\n                                                  <v-icon>mdi-pencil</v-icon>\r\n                                                </v-btn>\r\n                                              </template>\r\n                                              <!-- Assignment Select Button -->\r\n                                              <template v-else>\r\n                                                <v-btn\r\n                                                  color=\"primary\"\r\n                                                  outlined\r\n                                                  @click=\"\r\n                                                    goToBuilder(\r\n                                                      condition.conditionId,\r\n                                                      assignment.assignmentId\r\n                                                    )\r\n                                                  \"\r\n                                                  >Select\r\n                                                </v-btn>\r\n                                              </template>\r\n                                            </v-list-item-action>\r\n                                          </v-list-item>\r\n                                        </v-list>\r\n                                      </v-expansion-panel-content>\r\n                                    </v-expansion-panel>\r\n                                  </v-expansion-panels>\r\n                                </div>\r\n                              </template>\r\n                            </template>\r\n                            <!-- Participation data -->\r\n                            <template v-if=\"item.type === 'participation'\">\r\n                              <!-- Consent Participation -->\r\n                              <template v-if=\"item.description === 'CONSENT'\">\r\n                                Informed Consent\r\n                                <br />\r\n                                {{ experiment.consent.title }}\r\n                              </template>\r\n                              <!-- Manual Participation -->\r\n                              <template\r\n                                v-else-if=\"item.description === 'MANUAL'\"\r\n                              >\r\n                                Manual\r\n                                <br />\r\n                                <span\r\n                                  >{{ experiment.acceptedParticipants }}\r\n                                  students selected to participate out of\r\n                                  {{ experiment.potentialParticipants }}\r\n                                  students enrolled\r\n                                </span>\r\n                              </template>\r\n                              <!-- All Participation -->\r\n                              <template v-else>\r\n                                Include All Students\r\n                                <br />\r\n                                <span\r\n                                  >{{ experiment.potentialParticipants }}\r\n                                  students selected to participate out of\r\n                                  {{ experiment.potentialParticipants }}\r\n                                  students enrolled\r\n                                </span>\r\n                              </template>\r\n                            </template>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </v-expansion-panel-content>\r\n                  </v-expansion-panel>\r\n                </v-expansion-panels>\r\n              </template>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n    <v-container v-else>\r\n      no experiment\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from \"@/store\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport ExperimentSummaryStatus from \"@/views/ExperimentSummaryStatus\";\r\n\r\nexport default {\r\n  name: \"ExperimentSummary\",\r\n  components: { ExperimentSummaryStatus },\r\n  computed: {\r\n    ...mapGetters({\r\n      experiment: \"experiment/experiment\",\r\n      conditions: \"experiment/conditions\",\r\n      exposures: \"exposures/exposures\",\r\n      assignments: \"assignment/assignments\",\r\n    }),\r\n    // Higher Level Section Values\r\n    sectionValuesMap() {\r\n      return {\r\n        Design: this.designDetails,\r\n        Participants: this.participantDetails,\r\n        Assignments: this.assignmentDetails,\r\n      };\r\n    },\r\n    // Design Expansion View Values\r\n    designDetails() {\r\n      return [\r\n        {\r\n          title: \"Experiment Title\",\r\n          description: this.experiment.title,\r\n          editSection: \"ExperimentDesignTitle\",\r\n          type: \"string\",\r\n        },\r\n        {\r\n          title: \"Description\",\r\n          description: this.experiment.description,\r\n          editSection: \"ExperimentDesignDescription\",\r\n          type: \"string\",\r\n        },\r\n        {\r\n          title: \"Conditions\",\r\n          description: this.experiment.conditions,\r\n          editSection: \"ExperimentDesignConditions\",\r\n          type: \"array\",\r\n        },\r\n        {\r\n          title: \"Experiment Type\",\r\n          description: this.experiment.exposureType,\r\n          editSection: \"ExperimentDesignType\",\r\n          type: \"constant\",\r\n        },\r\n      ];\r\n    },\r\n    // Participation Expansion View Values\r\n    participantDetails() {\r\n      return [\r\n        {\r\n          title: \"SelectionMethod\",\r\n          description: this.experiment.participationType,\r\n          editSection: \"ExperimentParticipationSelectionMethod\",\r\n          type: \"participation\",\r\n        },\r\n      ];\r\n    },\r\n    // Assignment Expansion View Values\r\n    assignmentDetails() {\r\n      return [\r\n        {\r\n          title: \"Your Assignments\",\r\n          description: this.getAssignmentDetails(),\r\n          editSection: \"AssignmentExposureSets\",\r\n          type: \"assignments\",\r\n        },\r\n      ];\r\n    },\r\n  },\r\n\r\n  data: () => ({\r\n    tab: null,\r\n    items: [\"status\", \"setup\"],\r\n    // Expansion Tab Header Values\r\n    setupPanels: [\r\n      {\r\n        title: \"Design\",\r\n        description: \"The basic design of your experiment\",\r\n        image: require(\"@/assets/design_summary.svg\"),\r\n      },\r\n      {\r\n        title: \"Participants\",\r\n        description:\r\n          \"How students in your class become participants in your experiment\",\r\n        image: require(\"@/assets/participants_summary.svg\"),\r\n      },\r\n      {\r\n        title: \"Assignments\",\r\n        description: \"All experiment assignments\",\r\n        image: require(\"@/assets/assignments_summary.svg\"),\r\n      },\r\n    ],\r\n    conditionTreatments: {},\r\n  }),\r\n  methods: {\r\n    ...mapActions({\r\n      fetchExposures: \"exposures/fetchExposures\",\r\n      checkTreatment: \"treatment/checkTreatment\",\r\n      createTreatment: \"treatment/createTreatment\",\r\n      createAssessment: \"assessment/createAssessment\",\r\n    }),\r\n    // Navigate to EDIT section\r\n    handleEdit(componentName) {\r\n      this.$router.push({ name: componentName });\r\n    },\r\n    async getAssignmentDetails() {\r\n      await this.fetchExposures(this.experiment.experimentId);\r\n      return this.exposures;\r\n    },\r\n    hasTreatment(conditionId, assignmentId) {\r\n      const assignmentBasedOnConditions = this.conditionTreatments[\r\n        +conditionId\r\n      ];\r\n\r\n      return (\r\n        assignmentBasedOnConditions?.find(\r\n          (assignment) => assignment.assignmentId === assignmentId\r\n        ) !== undefined\r\n      );\r\n    },\r\n    async handleCreateTreatment(conditionId, assignmentId) {\r\n      // POST TREATMENT\r\n      try {\r\n        return await this.createTreatment([\r\n          this.experiment.experimentId,\r\n          conditionId,\r\n          assignmentId,\r\n        ]);\r\n      } catch (error) {\r\n        console.error(\"handleCreateTreatment | catch\", { error });\r\n      }\r\n    },\r\n    async handleCreateAssessment(conditionId, treatment) {\r\n      // POST ASSESSMENT TITLE & HTML (description)\r\n      try {\r\n        return await this.createAssessment([\r\n          this.experiment.experimentId,\r\n          conditionId,\r\n          treatment.treatmentId,\r\n        ]);\r\n      } catch (error) {\r\n        console.error(\"handleCreateAssessment | catch\", { error });\r\n      }\r\n    },\r\n    async goToBuilder(conditionId, assignmentId) {\r\n      // create the treatment\r\n      const treatment = await this.handleCreateTreatment(\r\n        conditionId,\r\n        assignmentId\r\n      );\r\n      // create the assessment\r\n      const assessment = await this.handleCreateAssessment(\r\n        conditionId,\r\n        treatment?.data\r\n      );\r\n\r\n      // show an alert if there's a problem creating the treatment or assessment\r\n      if (!treatment || !assessment) {\r\n        this.$swal(\"There was a problem creating your assessment\");\r\n        return false;\r\n      }\r\n\r\n      // send user to builder with the treatment and assessment ids\r\n      this.$router.push({\r\n        name: \"TerracottaBuilder\",\r\n        params: {\r\n          experiment_id: this.experiment.experimentId,\r\n          condition_id: conditionId,\r\n          treatment_id: treatment?.data?.treatmentId,\r\n          assessment_id: assessment?.data?.assessmentId,\r\n        },\r\n      });\r\n    },\r\n    // For Mapping Sorted Group Name with associated Condition\r\n    groupNameConditionMapping(groupConditionList) {\r\n      const groupConditionMap = {};\r\n      groupConditionList?.map(\r\n        (group) => (groupConditionMap[group.groupName] = group.conditionName)\r\n      );\r\n      return groupConditionMap;\r\n    },\r\n    // For Sorting Group Names\r\n    sortedGroups(groupConditionList) {\r\n      const newGroups = groupConditionList?.map((group) => group.groupName);\r\n      return newGroups?.sort();\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.tab = this.$router.currentRoute.name === \"ExperimentSummary\" ? 1 : 0;\r\n    await this.fetchExposures(this.experiment.experimentId);\r\n    for (let c of this.conditions) {\r\n      const t = await this.checkTreatment([\r\n        this.experiment.experimentId,\r\n        c.conditionId,\r\n        this.assignments[0].assignmentId,\r\n      ]);\r\n      this.conditionTreatments[c.conditionId] = t?.data;\r\n    }\r\n    this.getAssignmentDetails();\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    return store\r\n      .dispatch(\"experiment/fetchExperimentById\", to.params.experiment_id)\r\n      .then(next, next);\r\n  },\r\n  beforeRouteUpdate(to, from, next) {\r\n    return store\r\n      .dispatch(\"experiment/fetchExperimentById\", to.params.experiment_id)\r\n      .then(next, next);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.header {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n}\r\n.panel-overview {\r\n  display: inline-flex;\r\n}\r\ntable {\r\n  font-size: 16px;\r\n  color: black;\r\n  border-spacing: 0 25px;\r\n  .leftData {\r\n    white-space: nowrap;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    padding: 0 25px;\r\n    .detail {\r\n      display: inline-flex;\r\n      flex-direction: column;\r\n      .heading {\r\n        font-size: 18px;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n  .rightData {\r\n    display: flex;\r\n    max-width: max-content;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    border-left: 1px solid #e6e6e6;\r\n    padding: 0 12px !important;\r\n    .conditionLabel:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n    .assignmentExpansion:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n    .defaultPill {\r\n      color: white;\r\n      .v-icon {\r\n        color: white;\r\n        margin-right: 5px;\r\n        font-size: 18px;\r\n        vertical-align: text-bottom;\r\n      }\r\n    }\r\n    .conditionType,\r\n    .exposureSetName,\r\n    .conditionName {\r\n      font-size: 16px;\r\n      font-weight: 700;\r\n    }\r\n    .constantImage {\r\n      height: 36px;\r\n      width: 36px;\r\n    }\r\n    .conditionDetail {\r\n      margin-bottom: 0;\r\n      padding-bottom: 0;\r\n    }\r\n    .assignmentConditionName {\r\n      text-align: left;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentSummary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentSummary.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExperimentSummary.vue?vue&type=template&id=0bbef805&scoped=true&\"\nimport script from \"./ExperimentSummary.vue?vue&type=script&lang=js&\"\nexport * from \"./ExperimentSummary.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ExperimentSummary.vue?vue&type=style&index=0&id=0bbef805&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bbef805\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAction } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTab } from 'vuetify/lib/components/VTabs';\nimport { VTabItem } from 'vuetify/lib/components/VTabs';\nimport { VTabs } from 'vuetify/lib/components/VTabs';\nimport { VTabsItems } from 'vuetify/lib/components/VTabs';\ninstallComponents(component, {VBtn,VCard,VChip,VCol,VContainer,VDivider,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon,VImg,VList,VListItem,VListItemAction,VListItemContent,VRow,VTab,VTabItem,VTabs,VTabsItems})\n","module.exports = __webpack_public_path__ + \"img/one_condition.861bd905.svg\";","module.exports = __webpack_public_path__ + \"img/terracotta_logo_mark.15bd96f0.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentSummary.vue?vue&type=style&index=0&id=0bbef805&lang=scss&scoped=true&\"","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentSummaryStatus.vue?vue&type=style&index=0&id=33a56168&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/design_summary.59788b7b.svg\";","module.exports = __webpack_public_path__ + \"img/participants_summary.f68e5632.svg\";"],"sourceRoot":""}