{"version":3,"sources":["webpack:///./src/views/participation/ParticipationTypeAutoConfirm.vue?0263","webpack:///./src/views/participation/ParticipationTypeAutoConfirm.vue?a3f3","webpack:///src/views/participation/ParticipationTypeAutoConfirm.vue","webpack:///./src/views/participation/ParticipationTypeAutoConfirm.vue?24b7","webpack:///./src/views/participation/ParticipationTypeAutoConfirm.vue?bc72","webpack:///../../../src/components/VCard/VCard.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","name","on","goToConsentPage","staticRenderFns","component","VBtn","VCard","props","flat","hover","img","link","loaderHeight","type","Number","default","raised","Boolean","computed","classes","styles","style","methods","genProgress","key","data","h","tag","setBackgroundColor","$slots"],"mappings":"2IAAA,W,yCCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,SAAS,CAACE,YAAY,kDAAkDC,MAAM,CAAC,SAAW,KAAK,CAACH,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIQ,GAAG,uFAAuFJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,6PAA6PJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,oLAAoLJ,EAAG,QAAQ,CAACE,YAAY,OAAOC,MAAM,CAAC,UAAY,IAAI,MAAQ,UAAU,GAAK,CAACE,KAAM,+BAA+B,CAACT,EAAIQ,GAAG,4BAA4BJ,EAAG,MAAMA,EAAG,QAAQ,CAACE,YAAY,aAAaC,MAAM,CAAC,SAAW,GAAG,KAAO,GAAG,MAAQ,UAAU,UAAY,KAAKG,GAAG,CAAC,MAAQV,EAAIW,kBAAkB,CAACX,EAAIQ,GAAG,uDAAuDJ,EAAG,OAAO,IAC7nCQ,EAAkB,G,wBCmBtB,GACA,oCACA,qBACA,yCACA,gBACA,kDAFA,IAIA,gBAJA,WAIA,WACA,kBACA,8BAEA,yBACA,kBACA,gBACA,4GAIA,SAfA,WAgBA,sFCvCqX,I,qECQjXC,EAAY,eACd,EACAd,EACAa,GACA,EACA,KACA,WACA,MAIa,aAAAC,EAAiB,QAMhC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,QAAA,Q,2JCRpB,sBAAO,EAAD,YAAN,eAIN,CACPN,KADO,SAGPO,MAAO,CACLC,KADK,QAELC,MAFK,QAGLC,IAHK,OAILC,KAJK,QAKLC,aAAc,CACZC,KAAM,CAACC,OADK,QAEZC,QAAS,GAEXC,OAAQC,SAGVC,SAAU,CACRC,QADQ,WAEN,sCACE,UADK,GAEF,qCAFE,OAAP,IAGE,eAAgB3B,KAHX,KAIL,gBAAiBA,KAJZ,MAKL,eAAgBA,KALX,YAML,kBAAmBA,KANd,QAOL,mBAAoBA,KAPf,SAQL,iBAAkBA,KARb,QASF,6CAGP4B,OAdQ,WAeN,IAAMC,EAAK,kBACN,2CAOL,OAJI7B,KAAJ,MACE6B,EAAA,0BAA2B7B,KAA3B,2CAGF,IAIJ8B,QAAS,CACPC,YADO,WAEL,IAAMjC,EAAS,wCAAf,MAEA,SAEOE,KAAKE,eAAe,MAAO,CAChCG,YADgC,mBAEhC2B,IAAK,YACJ,CAHH,IAFoB,OASxBlC,OAvDO,SAuDD,GACJ,MAAsBE,KAAtB,oBAAM,EAAN,EAAM,IAAOiC,EAAb,EAAaA,KASb,OAPAA,EAAA,MAAajC,KAAb,OAEIA,KAAJ,cACEiC,EAAA,MAAaA,EAAA,OAAb,GACAA,EAAA,kBAGKC,EAAEC,EAAKnC,KAAKoC,mBAAmBpC,KAAxB,MAAN,GAAiD,CACvDA,KADuD,cAEvDA,KAAKqC,OAFP","file":"js/chunk-6e781ce4.008e378b.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationTypeAutoConfirm.vue?vue&type=style&index=0&id=f315a308&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-card',{staticClass:\"mb-8 pt-5 px-5 mx-auto red lighten-5 rounded-lg\",attrs:{\"outlined\":\"\"}},[_c('p',[_c('strong',[_vm._v(\"Are you sure you want to include all students in your experiment automatically?\")])]),_c('p',[_vm._v(\"One of the basic principles of ethical research is showing respect for research participants. One way of showing this respect is by providing people an opportunity to make decisions for themselves about whether they want to participate in a study.\")]),_c('p',[_vm._v(\"Terracotta is designed to make this process easy. If you want, we can create as short assignment where your students will provide consent to be included in this experiment.\")])]),_c('v-btn',{staticClass:\"mb-4\",attrs:{\"elevation\":\"0\",\"color\":\"primary\",\"to\":{name: 'ParticipationDistribution'}}},[_vm._v(\"Yes, I want to proceed\")]),_c('br'),_c('v-btn',{staticClass:\"consentBtn\",attrs:{\"outlined\":\"\",\"tile\":\"\",\"color\":\"primary\",\"elevation\":\"0\"},on:{\"click\":_vm.goToConsentPage}},[_vm._v(\"No, I want to create a consent assignment instead\")]),_c('br')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<v-card\n\t\t\tclass=\"mb-8 pt-5 px-5 mx-auto red lighten-5 rounded-lg\"\n\t\t\toutlined\n\t\t>\n\t\t\t<p><strong>Are you sure you want to include all students in your experiment automatically?</strong></p>\n\t\t\t<p>One of the basic principles of ethical research is showing respect for research participants.  One way of showing this respect is by providing people an opportunity to make decisions for themselves about whether they want to participate in a study.</p>\n\t\t\t<p>Terracotta is designed to make this process easy.  If you want, we can create as short assignment where your students will provide consent to be included in this experiment.</p>\n\t\t</v-card>\n\t\t<v-btn elevation=\"0\" color=\"primary\" class=\"mb-4\" :to=\"{name: 'ParticipationDistribution'}\">Yes, I want to proceed</v-btn>\n\t\t<br>\n\t\t<v-btn @click=\"goToConsentPage\" outlined tile class=\"consentBtn\" color=\"primary\" elevation=\"0\">No, I want to create a consent assignment instead</v-btn>\n\t\t<br>\n\t</div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n\tname: 'ParticipationTypeAutoConfirm',\n\tprops: ['experiment'],\n\tmethods: {\n\t\t...mapActions({\n\t\t\tupdateExperiment: 'experiment/updateExperiment',\n\t\t}),\n\tgoToConsentPage() {\n\t\tconst e = this.experiment\n\t\t\te.participationType = 'CONSENT'\n\n\t\t\tthis.updateExperiment(e)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\tthis.$router.push({name:'ParticipationTypeConsentOverview', params:{experiment: this.experiment.experimentId}})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\n\t},\n\tsaveExit() {\n\t\tthis.$router.push({name:'Home', params:{experiment: this.experiment.experimentId}})\n\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\t@import '~@/styles/variables';\n\n\t.v-card.red {\n\t\tborder-color: map-get($red, 'lighten-2') !important;\n\t}\n\t.consentBtn {\n\t\tborder: none;\n\t\tpadding: 0 !important;\n\t}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationTypeAutoConfirm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationTypeAutoConfirm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ParticipationTypeAutoConfirm.vue?vue&type=template&id=f315a308&scoped=true&\"\nimport script from \"./ParticipationTypeAutoConfirm.vue?vue&type=script&lang=js&\"\nexport * from \"./ParticipationTypeAutoConfirm.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ParticipationTypeAutoConfirm.vue?vue&type=style&index=0&id=f315a308&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f315a308\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\ninstallComponents(component, {VBtn,VCard})\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n"],"sourceRoot":""}