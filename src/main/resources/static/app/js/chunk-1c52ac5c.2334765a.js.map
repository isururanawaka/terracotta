{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/views/participation/ParticipationSummary.vue?9b0a","webpack:///src/views/participation/ParticipationSummary.vue","webpack:///./src/views/participation/ParticipationSummary.vue?93ee","webpack:///./src/views/participation/ParticipationSummary.vue?7b54","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///./src/views/participation/ParticipationSummary.vue?d33d"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","_vm","_h","$createElement","_c","_self","_m","experiment","attrs","_v","_s","participationType","_e","consent","title","on","nextSection","staticRenderFns","beforeRouteEnter","to","meta","selectionType","from","next","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","ripple","disableIconRotate","expandIcon","type","default","hideActions","data","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"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","file":"js/chunk-1c52ac5c.2334765a.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),(_vm.experiment)?[(this.experiment.participationType)?_c('v-expansion-panels',{attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3 mb-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\"Selection Method\")])]),_c('v-expansion-panel-content',[_c('p',[_vm._v(_vm._s(_vm.participationType))])])],1)],1):_vm._e(),(this.consent && this.consent.title)?_c('v-expansion-panels',{attrs:{\"flat\":\"\"}},[_c('v-expansion-panel',{staticClass:\"py-3 mb-3\"},[_c('v-expansion-panel-header',[_c('strong',[_vm._v(\"Assignment Title\")])]),_c('v-expansion-panel-content',[_c('p',[_vm._v(_vm._s(_vm.consent.title))])])],1)],1):_vm._e()]:_vm._e(),_c('v-btn',{staticClass:\"mt-3\",attrs:{\"elevation\":\"0\",\"color\":\"primary\"},on:{\"click\":_vm.nextSection}},[_vm._v(\" Continue to next section \")])],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{staticClass:\"my-3\"},[_c('span',{staticClass:\"green--text font-weight-bold\"},[_vm._v(\"You've completed section 2.\")]),_c('br'),_vm._v(\" Here's a summary of your experiment participation. \")])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <h1 class=\"my-3\">\r\n      <span class=\"green--text font-weight-bold\"\r\n        >You've completed section 2.</span\r\n      ><br />\r\n      Here's a summary of your experiment participation.\r\n    </h1>\r\n\t\t<template v-if=\"experiment\">\r\n\r\n\t\t\t<v-expansion-panels flat v-if=\"this.experiment.participationType\">\r\n\t\t\t\t<v-expansion-panel class=\"py-3 mb-3\">\r\n\t\t\t\t\t<v-expansion-panel-header><strong>Selection Method</strong></v-expansion-panel-header>\r\n\t\t\t\t\t<v-expansion-panel-content>\r\n\t\t\t\t\t<p>{{ participationType }}</p>\r\n\t\t\t\t\t</v-expansion-panel-content>\r\n\t\t\t\t</v-expansion-panel>\r\n\t\t\t</v-expansion-panels>\r\n\r\n\t\t\t<v-expansion-panels flat v-if=\"this.consent && this.consent.title\">\r\n\t\t\t\t<v-expansion-panel class=\"py-3 mb-3\">\r\n\t\t\t\t\t<v-expansion-panel-header><strong>Assignment Title</strong></v-expansion-panel-header>\r\n\t\t\t\t\t<v-expansion-panel-content>\r\n\t\t\t\t\t<p>{{ consent.title }}</p>\r\n\t\t\t\t\t</v-expansion-panel-content>\r\n\t\t\t\t</v-expansion-panel>\r\n\t\t\t</v-expansion-panels>\r\n\r\n\t\t</template>\r\n\r\n\t\t<v-btn\r\n\t\t\televation=\"0\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tclass=\"mt-3\"\r\n\t\t\t@click=\"nextSection\"\r\n\t\t\t>\r\n\t\t\t\tContinue to next section\r\n\t\t</v-btn>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"ParticipationSummary\",\r\n  props: [\"experiment\"],\r\n\tcomputed: {\r\n\t\t...mapGetters({\r\n\t\t\tconsent: 'consent/consent'\r\n\t\t}),\r\n\t\tparticipationType() {\r\n\t\t\tlet type = ''\r\n\r\n\t\t\tswitch (this.experiment.participationType) {\r\n\t\t\t\tcase 'CONSENT':\r\n\t\t\t\t\ttype = 'Invited students to consent'\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'MANUAL':\r\n\t\t\t\t\ttype = 'Manually determined students'\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'AUTO':\r\n\t\t\t\t\ttype = 'Automatically included all students'\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\treturn type\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tnextSection() {\r\n\t\t\tthis.$router.push({name:'AssignmentIntro', params:{experiment: this.experiment.experimentId}})\r\n\t\t},\r\n\t\tsaveExit() {\r\n\t\t\tthis.$router.push({name:'Home', params:{experiment: this.experiment.experiment_id}})\r\n\t\t}\r\n\t},\r\n  beforeRouteEnter(to, from, next) {\r\n    // Updating selection type for custom steps\r\n    to.meta.selectionType = from.meta.selectionType\r\n    next()\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n.v-expansion-panel {\r\n\tborder: 1px solid map-get($grey, 'lighten-2');\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationSummary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationSummary.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ParticipationSummary.vue?vue&type=template&id=6d28eb54&\"\nimport script from \"./ParticipationSummary.vue?vue&type=script&lang=js&\"\nexport * from \"./ParticipationSummary.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ParticipationSummary.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParticipationSummary.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}